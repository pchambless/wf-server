{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 03:44:37"}
{"level":"info","message":"Log file rotated","newFilename":"C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\logs\\application-2025-03-04.log","oldFilename":"C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\logs\\application-2025-03-03.log","timestamp":"2025-03-04 03:44:37"}
{"address":"159.223.104.19","code":"ECONNABORTED","errno":-4079,"fatal":true,"level":"error","message":"[dbManager.js] Database connection test failed: connect ECONNABORTED 159.223.104.19:3306","port":3306,"stack":"Error: connect ECONNABORTED 159.223.104.19:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1555:16)","syscall":"connect","timestamp":"2025-03-04 08:36:39"}
{"address":"159.223.104.19","code":"ECONNABORTED","errno":-4079,"fatal":true,"level":"warn","message":"[dbManager.js] Health check failed: connect ECONNABORTED 159.223.104.19:3306","port":3306,"stack":"Error: connect ECONNABORTED 159.223.104.19:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1555:16)","syscall":"connect","timestamp":"2025-03-04 08:36:40"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-03-04 08:41:39"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 08:41:39"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 08:46:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 08:51:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 08:56:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 09:01:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 09:06:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 09:11:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 09:16:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 09:21:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 09:26:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 09:31:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 09:36:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 09:41:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 09:46:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 09:51:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 09:56:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 10:01:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 10:06:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 10:11:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 10:16:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 10:21:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 10:26:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 10:31:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 10:36:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 10:41:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 10:46:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 10:51:38"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-03-04 10:54:09"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-03-04 10:54:10"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-03-04 10:54:10"}
{"level":"debug","message":"[index.js]  Initializing routes","timestamp":"2025-03-04 10:54:10"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-03-04 10:54:10"}
{"0":"POST /api/execEventType","1":"POST /api/initialize","2":"GET /api/util/list-routes","3":"POST /api/util/restart-server","4":"GET /api/util/fetchEventTypes","5":"GET /api/util/fetchApiColumns","6":"POST /api/auth/login","7":"GET /api/util/event-types-status","level":"info","message":"[registerRoutes.js] Routes registered:","timestamp":"2025-03-04 10:54:10"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-03-04 10:54:10"}
{"level":"debug","message":"[index.js]  Routes initialized","timestamp":"2025-03-04 10:54:10"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-03-04 10:54:10"}
{"count":19,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-03-04 10:54:11"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-03-04 10:54:11"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-03-04 10:54:11"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-03-04 10:54:11"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-03-04 10:54:11"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-03-04 10:54:11"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-03-04 10:54:11"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 10:59:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 11:04:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 11:09:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 11:14:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 11:19:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 11:24:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 11:29:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 11:34:10"}
{"level":"info","message":"[app.js]  Request received: POST /api/execEventType","timestamp":"2025-03-04 11:35:24"}
{"body":{"eventType":"apiEventList","params":{}},"headers":{"accept":"application/json, text/plain, */*","accept-encoding":"gzip, deflate, br, zstd","accept-language":"en-US,en;q=0.9","connection":"keep-alive","content-length":"40","content-type":"application/json","dnt":"1","host":"localhost:3001","origin":"http://localhost:3000","referer":"http://localhost:3000/","sec-ch-ua":"\"Not(A:Brand\";v=\"99\", \"Google Chrome\";v=\"133\", \"Chromium\";v=\"133\"","sec-ch-ua-mobile":"?0","sec-ch-ua-platform":"\"Windows\"","sec-fetch-dest":"empty","sec-fetch-mode":"cors","sec-fetch-site":"same-site","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-03-04 11:35:24"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-03-04 11:35:24"}
{"body":{"eventType":"apiEventList","params":{}},"headers":{"accept":"application/json, text/plain, */*","accept-encoding":"gzip, deflate, br, zstd","accept-language":"en-US,en;q=0.9","connection":"keep-alive","content-length":"40","content-type":"application/json","dnt":"1","host":"localhost:3001","origin":"http://localhost:3000","referer":"http://localhost:3000/","sec-ch-ua":"\"Not(A:Brand\";v=\"99\", \"Google Chrome\";v=\"133\", \"Chromium\";v=\"133\"","sec-ch-ua-mobile":"?0","sec-ch-ua-platform":"\"Windows\"","sec-fetch-dest":"empty","sec-fetch-mode":"cors","sec-fetch-site":"same-site","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[execEventType.js] Request received","method":"POST","originalUrl":"/api/execEventType","timestamp":"2025-03-04 11:35:24"}
{"level":"debug","message":"[execEventType.js] Parameters:","timestamp":"2025-03-04 11:35:24"}
{"level":"info","message":"[eventTypeManager.js] Event types refreshed at Tue Mar 04 2025 11:35:24 GMT-0600 (Central Standard Time)","timestamp":"2025-03-04 11:35:24"}
{"level":"debug","message":"[execEventType.js] Executing query with event type method: GET","timestamp":"2025-03-04 11:35:24"}
{"level":"debug","message":"[queryResolver.js] Original query:","params":{},"qrySQL":"SELECT * \nFROM api_wf.apiEventList","timestamp":"2025-03-04 11:35:24"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: SELECT * \nFROM api_wf.apiEventList","timestamp":"2025-03-04 11:35:24"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-03-04 11:35:24"}
{"level":"info","message":"[app.js]  Request received: POST /api/execEventType","timestamp":"2025-03-04 11:35:24"}
{"body":{"eventType":"apiEventList","params":{}},"headers":{"accept":"application/json, text/plain, */*","accept-encoding":"gzip, deflate, br, zstd","accept-language":"en-US,en;q=0.9","connection":"keep-alive","content-length":"40","content-type":"application/json","dnt":"1","host":"localhost:3001","origin":"http://localhost:3000","referer":"http://localhost:3000/","sec-ch-ua":"\"Not(A:Brand\";v=\"99\", \"Google Chrome\";v=\"133\", \"Chromium\";v=\"133\"","sec-ch-ua-mobile":"?0","sec-ch-ua-platform":"\"Windows\"","sec-fetch-dest":"empty","sec-fetch-mode":"cors","sec-fetch-site":"same-site","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-03-04 11:35:24"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-03-04 11:35:24"}
{"body":{"eventType":"apiEventList","params":{}},"headers":{"accept":"application/json, text/plain, */*","accept-encoding":"gzip, deflate, br, zstd","accept-language":"en-US,en;q=0.9","connection":"keep-alive","content-length":"40","content-type":"application/json","dnt":"1","host":"localhost:3001","origin":"http://localhost:3000","referer":"http://localhost:3000/","sec-ch-ua":"\"Not(A:Brand\";v=\"99\", \"Google Chrome\";v=\"133\", \"Chromium\";v=\"133\"","sec-ch-ua-mobile":"?0","sec-ch-ua-platform":"\"Windows\"","sec-fetch-dest":"empty","sec-fetch-mode":"cors","sec-fetch-site":"same-site","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[execEventType.js] Request received","method":"POST","originalUrl":"/api/execEventType","timestamp":"2025-03-04 11:35:24"}
{"level":"debug","message":"[execEventType.js] Parameters:","timestamp":"2025-03-04 11:35:24"}
{"level":"debug","message":"[execEventType.js] Executing query with event type method: GET","timestamp":"2025-03-04 11:35:24"}
{"level":"debug","message":"[queryResolver.js] Original query:","params":{},"qrySQL":"SELECT * \nFROM api_wf.apiEventList","timestamp":"2025-03-04 11:35:24"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: SELECT * \nFROM api_wf.apiEventList","timestamp":"2025-03-04 11:35:24"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-03-04 11:35:24"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-03-04 11:35:24"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":119.5808,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-03-04 11:35:24"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-03-04 11:35:24"}
{"level":"info","message":"[execEventType.js] Query executed successfully for apiEventList","timestamp":"2025-03-04 11:35:24"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":141.2993,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-03-04 11:35:24"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 19","timestamp":"2025-03-04 11:35:25"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":691.7925,"method":"GET","operation":"database_query","rowCount":19,"success":true},"timestamp":"2025-03-04 11:35:25"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-03-04 11:35:25"}
{"level":"info","message":"[execEventType.js] Query executed successfully for apiEventList","timestamp":"2025-03-04 11:35:25"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":705.1973,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-03-04 11:35:25"}
{"level":"info","message":"[app.js]  Request received: POST /api/auth/login","timestamp":"2025-03-04 11:36:26"}
{"body":{"password":"Nothing123","userEmail":"pc7900@gmail.com"},"headers":{"accept":"*/*","accept-encoding":"gzip, deflate, br, zstd","accept-language":"en-US,en;q=0.9","connection":"keep-alive","content-length":"56","content-type":"application/json","dnt":"1","host":"localhost:3001","origin":"http://localhost:3000","referer":"http://localhost:3000/","sec-ch-ua":"\"Not(A:Brand\";v=\"99\", \"Google Chrome\";v=\"133\", \"Chromium\";v=\"133\"","sec-ch-ua-mobile":"?0","sec-ch-ua-platform":"\"Windows\"","sec-fetch-dest":"empty","sec-fetch-mode":"cors","sec-fetch-site":"same-site","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/api/auth/login","timestamp":"2025-03-04 11:36:26"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/api/auth/login","timestamp":"2025-03-04 11:36:26"}
{"level":"info","message":"[userLogin.js] Login attempt started","timestamp":"2025-03-04 11:36:26"}
{"email":"pc7900@gmail.com","level":"debug","message":"[userLogin.js] Executing user lookup query","timestamp":"2025-03-04 11:36:26"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: SELECT * FROM users WHERE email = ?","timestamp":"2025-03-04 11:36:26"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-03-04 11:36:26"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":86.3172,"errorCode":"ER_NO_SUCH_TABLE","errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-03-04 11:36:26"}
{"code":"ER_NO_SUCH_TABLE","errno":1146,"level":"error","message":"Table 'api_wf.users' doesn't exist","sql":"SELECT * FROM users WHERE email = ?","sqlMessage":"Table 'api_wf.users' doesn't exist","sqlState":"42S02","stack":"Error: Table 'api_wf.users' doesn't exist\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at executeQuery (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\utils\\dbUtils.js:30:45)\n    at login (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\userLogin.js:38:29)\n    at Layer.handle [as handle_request] (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\express\\lib\\router\\route.js:149:13)\n    at Route.dispatch (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\express\\lib\\router\\route.js:119:3)\n    at Layer.handle [as handle_request] (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\express\\lib\\router\\index.js:280:10)","timestamp":"2025-03-04 11:36:26"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-03-04 11:36:26"}
{"code":"ER_NO_SUCH_TABLE","errno":1146,"level":"error","message":"Table 'api_wf.users' doesn't exist","sql":"SELECT * FROM users WHERE email = ?","sqlMessage":"Table 'api_wf.users' doesn't exist","sqlState":"42S02","stack":"Error: Table 'api_wf.users' doesn't exist\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at executeQuery (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\utils\\dbUtils.js:30:45)\n    at login (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\userLogin.js:38:29)\n    at Layer.handle [as handle_request] (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\express\\lib\\router\\route.js:149:13)\n    at Route.dispatch (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\express\\lib\\router\\route.js:119:3)\n    at Layer.handle [as handle_request] (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\express\\lib\\router\\index.js:280:10)","timestamp":"2025-03-04 11:36:26"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":100.8841,"method":"POST","operation":"http_request","path":"/api/auth/login","status":500},"timestamp":"2025-03-04 11:36:26"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 11:39:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 11:44:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 11:49:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 11:54:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 11:59:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 12:04:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 12:09:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 12:14:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 12:19:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 12:24:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 12:29:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 12:34:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 12:39:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 12:44:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 12:49:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 12:54:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 12:59:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 13:04:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 13:09:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 13:14:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 13:19:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 13:24:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 13:29:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 13:34:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 13:39:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 13:44:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 13:49:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 13:54:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 14:56:05"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 17:49:14"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 17:54:14"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 17:59:14"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 18:04:14"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 18:09:14"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 18:14:14"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 18:19:14"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 18:24:14"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 18:29:14"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 18:34:14"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 18:39:14"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 18:44:14"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 18:49:14"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 18:54:14"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 18:59:14"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 19:04:14"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 19:09:14"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 19:14:14"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 19:19:14"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 19:24:14"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 19:29:14"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 19:34:15"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 19:39:15"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 19:44:15"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 19:49:15"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 21:17:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 21:22:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 21:27:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 21:32:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 21:37:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 21:42:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 21:47:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 21:52:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 21:57:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 22:02:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 22:07:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 22:12:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 22:17:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 22:22:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 22:27:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 22:32:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 22:37:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 22:42:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 22:47:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 22:52:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 22:57:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 23:02:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 23:07:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 23:12:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-03-04 23:17:37"}
