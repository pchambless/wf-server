{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 11:22:49"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 11:22:50"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 11:22:50"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 11:22:50"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 11:22:50"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 11:22:50"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 11:22:50"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 11:22:50"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 11:22:50"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 11:22:50"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 11:22:50"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 11:23:05"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 11:23:06"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 11:23:06"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 11:23:06"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 11:23:06"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 11:23:06"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 11:23:06"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 11:23:06"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 11:23:06"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 11:23:06"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 11:23:06"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 11:23:11"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 11:23:12"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 11:23:12"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 11:23:12"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 11:23:12"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 11:23:12"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 11:23:12"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 11:23:12"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 11:23:12"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 11:23:12"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 11:23:12"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 11:23:20"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 11:23:21"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 11:23:21"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 11:23:21"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 11:23:21"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 11:23:21"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 11:23:21"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 11:23:21"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 11:23:21"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 11:23:21"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 11:23:21"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 11:23:27"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 11:23:27"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 11:23:27"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 11:23:27"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 11:23:27"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 11:23:27"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 11:23:27"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 11:23:27"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 11:23:27"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 11:23:27"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 11:23:27"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 11:27:11"}
{"level":"info","message":"[server.js] Connected to the database successfully","timestamp":"2025-02-27 11:27:11"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 11:27:11"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 11:27:11"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 11:27:11"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 11:27:11"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 11:27:11"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 11:27:11"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 11:27:11"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 11:27:11"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 11:27:11"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 11:27:11"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 11:27:11"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 11:27:11"}
{"code":"ER_NO_SUCH_TABLE","errno":1146,"level":"error","message":"Table 'whatsfresh.v_eventTypes' doesn't exist","sql":"SELECT * FROM v_eventTypes","sqlMessage":"Table 'whatsfresh.v_eventTypes' doesn't exist","sqlState":"42S02","stack":"Error: Table 'whatsfresh.v_eventTypes' doesn't exist\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at genEventTypeFile (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\fetchEventTypes.js:9:37)\n    at startServer (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\server.js:58:15)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 11:27:12"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 11:27:27"}
{"level":"info","message":"[server.js] Connected to the database successfully","timestamp":"2025-02-27 11:27:27"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 11:27:27"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 11:27:27"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 11:27:27"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 11:27:27"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 11:27:27"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 11:27:27"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 11:27:27"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 11:27:27"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 11:27:27"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 11:27:27"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 11:27:27"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 11:27:27"}
{"code":"ER_NO_SUCH_TABLE","errno":1146,"level":"error","message":"Table 'whatsfresh.v_eventTypes' doesn't exist","sql":"SELECT * FROM v_eventTypes","sqlMessage":"Table 'whatsfresh.v_eventTypes' doesn't exist","sqlState":"42S02","stack":"Error: Table 'whatsfresh.v_eventTypes' doesn't exist\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at genEventTypeFile (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\fetchEventTypes.js:9:37)\n    at startServer (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\server.js:58:15)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 11:27:28"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 11:27:33"}
{"level":"info","message":"[server.js] Connected to the database successfully","timestamp":"2025-02-27 11:27:33"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 11:27:33"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 11:27:33"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 11:27:33"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 11:27:33"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 11:27:33"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 11:27:33"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 11:27:33"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 11:27:33"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 11:27:33"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 11:27:33"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 11:27:33"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 11:27:33"}
{"code":"ER_NO_SUCH_TABLE","errno":1146,"level":"error","message":"Table 'whatsfresh.v_eventTypes' doesn't exist","sql":"SELECT * FROM v_eventTypes","sqlMessage":"Table 'whatsfresh.v_eventTypes' doesn't exist","sqlState":"42S02","stack":"Error: Table 'whatsfresh.v_eventTypes' doesn't exist\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at genEventTypeFile (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\fetchEventTypes.js:9:37)\n    at startServer (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\server.js:58:15)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 11:27:33"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 11:27:47"}
{"level":"info","message":"[server.js] Connected to the database successfully","timestamp":"2025-02-27 11:27:47"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 11:27:47"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 11:27:47"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 11:27:47"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 11:27:47"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 11:27:47"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 11:27:47"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 11:27:47"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 11:27:47"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 11:27:47"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 11:27:47"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 11:27:47"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 11:27:47"}
{"code":"ER_NO_SUCH_TABLE","errno":1146,"level":"error","message":"Table 'whatsfresh.v_eventTypes' doesn't exist","sql":"SELECT * FROM v_eventTypes","sqlMessage":"Table 'whatsfresh.v_eventTypes' doesn't exist","sqlState":"42S02","stack":"Error: Table 'whatsfresh.v_eventTypes' doesn't exist\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at genEventTypeFile (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\fetchEventTypes.js:9:37)\n    at startServer (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\server.js:58:15)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 11:27:48"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 11:28:02"}
{"level":"info","message":"[server.js] Connected to the database successfully","timestamp":"2025-02-27 11:28:02"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 11:28:02"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 11:28:02"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 11:28:02"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 11:28:02"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 11:28:02"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 11:28:02"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 11:28:02"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 11:28:02"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 11:28:02"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 11:28:02"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 11:28:02"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 11:28:02"}
{"code":"ER_NO_SUCH_TABLE","errno":1146,"level":"error","message":"Table 'whatsfresh.v_eventTypes' doesn't exist","sql":"SELECT * FROM v_eventTypes","sqlMessage":"Table 'whatsfresh.v_eventTypes' doesn't exist","sqlState":"42S02","stack":"Error: Table 'whatsfresh.v_eventTypes' doesn't exist\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at genEventTypeFile (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\fetchEventTypes.js:9:37)\n    at startServer (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\server.js:58:15)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 11:28:02"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 11:28:10"}
{"level":"info","message":"[server.js] Connected to the database successfully","timestamp":"2025-02-27 11:28:10"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 11:28:10"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 11:28:10"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 11:28:10"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 11:28:10"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 11:28:10"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 11:28:10"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 11:28:10"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 11:28:10"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 11:28:10"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 11:28:10"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 11:28:10"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 11:28:10"}
{"code":"ER_NO_SUCH_TABLE","errno":1146,"level":"error","message":"Table 'whatsfresh.v_eventTypes' doesn't exist","sql":"SELECT * FROM v_eventTypes","sqlMessage":"Table 'whatsfresh.v_eventTypes' doesn't exist","sqlState":"42S02","stack":"Error: Table 'whatsfresh.v_eventTypes' doesn't exist\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at genEventTypeFile (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\fetchEventTypes.js:9:37)\n    at startServer (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\server.js:58:15)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 11:28:11"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 11:33:05"}
{"level":"info","message":"[server.js] Connected to the database successfully","timestamp":"2025-02-27 11:33:05"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 11:33:05"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 11:33:05"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 11:33:05"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 11:33:05"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 11:33:05"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 11:33:05"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 11:33:05"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 11:33:05"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 11:33:05"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 11:33:05"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 11:33:05"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 11:33:05"}
{"code":"ER_NO_SUCH_TABLE","errno":1146,"level":"error","message":"Table 'whatsfresh.v_eventTypes' doesn't exist","sql":"SELECT * FROM v_eventTypes","sqlMessage":"Table 'whatsfresh.v_eventTypes' doesn't exist","sqlState":"42S02","stack":"Error: Table 'whatsfresh.v_eventTypes' doesn't exist\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at genEventTypeFile (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\fetchEventTypes.js:9:37)\n    at startServer (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\server.js:58:15)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 11:33:06"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 11:34:17"}
{"level":"info","message":"[server.js] Connected to the database successfully","timestamp":"2025-02-27 11:34:17"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 11:34:17"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 11:34:17"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 11:34:17"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 11:34:17"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 11:34:17"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 11:34:17"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 11:34:17"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 11:34:17"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 11:34:17"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 11:34:17"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 11:34:17"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 11:34:17"}
{"code":"ER_NO_SUCH_TABLE","errno":1146,"level":"error","message":"Table 'whatsfresh.v_eventTypes' doesn't exist","sql":"SELECT * FROM v_eventTypes","sqlMessage":"Table 'whatsfresh.v_eventTypes' doesn't exist","sqlState":"42S02","stack":"Error: Table 'whatsfresh.v_eventTypes' doesn't exist\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at genEventTypeFile (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\fetchEventTypes.js:9:37)\n    at startServer (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\server.js:58:15)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 11:34:18"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 11:37:09"}
{"level":"info","message":"[server.js] Connected to the database successfully","timestamp":"2025-02-27 11:37:09"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 11:37:09"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 11:37:09"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 11:37:09"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 11:37:09"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 11:37:09"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 11:37:09"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 11:37:09"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 11:37:09"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 11:37:09"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 11:37:09"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 11:37:09"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 11:37:09"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 11:37:10"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 11:37:10"}
{"code":"ER_NO_SUCH_TABLE","errno":1146,"level":"error","message":"Table 'whatsfresh.v_apiColumns' doesn't exist","sql":"SELECT * FROM v_apiColumns","sqlMessage":"Table 'whatsfresh.v_apiColumns' doesn't exist","sqlState":"42S02","stack":"Error: Table 'whatsfresh.v_apiColumns' doesn't exist\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at genApiColumnFile (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\fetchApiColumns.js:11:37)\n    at startServer (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\server.js:59:15)","timestamp":"2025-02-27 11:37:10"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 11:37:28"}
{"level":"info","message":"[server.js] Connected to the database successfully","timestamp":"2025-02-27 11:37:28"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 11:37:28"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 11:37:28"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 11:37:28"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 11:37:28"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 11:37:28"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 11:37:28"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 11:37:28"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 11:37:28"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 11:37:28"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 11:37:28"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 11:37:28"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 11:37:28"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 11:37:28"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 11:37:28"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 11:37:28"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 11:37:28"}
{"level":"info","message":"[server.js] Starting server on port 3000","timestamp":"2025-02-27 11:37:28"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3000","timestamp":"2025-02-27 11:37:28"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 11:37:43"}
{"level":"info","message":"[server.js] Connected to the database successfully","timestamp":"2025-02-27 11:37:43"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 11:37:43"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 11:37:43"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 11:37:43"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 11:37:43"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 11:37:43"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 11:37:43"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 11:37:43"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 11:37:43"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 11:37:43"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 11:37:43"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 11:37:43"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 11:37:43"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 11:37:44"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 11:37:44"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 11:37:44"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 11:37:44"}
{"level":"info","message":"[server.js] Starting server on port 3000","timestamp":"2025-02-27 11:37:44"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3000","timestamp":"2025-02-27 11:37:44"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 11:38:38"}
{"level":"info","message":"[server.js] Connected to the database successfully","timestamp":"2025-02-27 11:38:38"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 11:38:38"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 11:38:38"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 11:38:38"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 11:38:38"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 11:38:38"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 11:38:38"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 11:38:38"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 11:38:38"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 11:38:38"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 11:38:38"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 11:38:38"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 11:38:38"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 11:38:38"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 11:38:38"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 11:38:38"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 11:38:38"}
{"level":"info","message":"[server.js] Starting server on port 3000","timestamp":"2025-02-27 11:38:38"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3000","timestamp":"2025-02-27 11:38:38"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 11:40:26"}
{"level":"info","message":"[server.js] Connected to the database successfully","timestamp":"2025-02-27 11:40:26"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 11:40:26"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 11:40:26"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 11:40:26"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 11:40:26"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 11:40:26"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 11:40:26"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 11:40:26"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 11:40:26"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 11:40:26"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 11:40:26"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 11:40:26"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 11:40:26"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 11:40:26"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 11:40:26"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 11:40:27"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 11:40:27"}
{"level":"info","message":"[server.js] Starting server on port 3000","timestamp":"2025-02-27 11:40:27"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3000","timestamp":"2025-02-27 11:40:27"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 11:40:28"}
{"level":"info","message":"[server.js] Connected to the database successfully","timestamp":"2025-02-27 11:40:28"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 11:40:28"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 11:40:28"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 11:40:28"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 11:40:28"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 11:40:28"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 11:40:28"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 11:40:28"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 11:40:28"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 11:40:28"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 11:40:28"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 11:40:28"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 11:40:28"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 11:40:28"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 11:40:28"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 11:40:28"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 11:40:28"}
{"level":"info","message":"[server.js] Starting server on port 3000","timestamp":"2025-02-27 11:40:28"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3000","timestamp":"2025-02-27 11:40:28"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 11:40:42"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:40:43"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 11:40:43"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 11:40:43"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 11:40:43"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 11:40:43"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 11:40:43"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 11:40:43"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 11:40:43"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 11:40:43"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 11:40:43"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 11:40:43"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 11:40:43"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 11:40:43"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 11:40:43"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 11:40:43"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 11:40:43"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 11:40:43"}
{"level":"info","message":"[server.js] Starting server on port 3000","timestamp":"2025-02-27 11:40:43"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3000","timestamp":"2025-02-27 11:40:43"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 11:40:58"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:40:58"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 11:40:58"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 11:40:58"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 11:40:58"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 11:40:58"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 11:40:58"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 11:40:58"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 11:40:58"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 11:40:58"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 11:40:58"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 11:40:58"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 11:40:58"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 11:40:58"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 11:40:58"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 11:40:58"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 11:40:59"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 11:40:59"}
{"level":"info","message":"[server.js] Starting server on port 3000","timestamp":"2025-02-27 11:40:59"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3000","timestamp":"2025-02-27 11:40:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:41:28"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:41:28"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:41:58"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:41:58"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:42:28"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:42:28"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:42:58"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:42:58"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:43:28"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:43:28"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:43:58"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:43:58"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:44:28"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:44:28"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:44:58"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:44:58"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:45:28"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:45:28"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:45:58"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:45:58"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:46:28"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:46:28"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:46:58"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:46:58"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:47:28"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:47:28"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:47:58"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:47:58"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:48:28"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:48:28"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:48:58"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:48:58"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:49:28"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:49:28"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:49:58"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:49:58"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:50:28"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:50:28"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:50:58"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:50:58"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:51:28"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:51:28"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:51:58"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:51:58"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:52:28"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:52:28"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:52:58"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:52:58"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:53:28"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:53:28"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:53:58"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:53:58"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:54:28"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:54:28"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:54:58"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:54:58"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:55:28"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:55:28"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:55:58"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:55:58"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:56:28"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:56:28"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:56:58"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:56:58"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:57:28"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:57:28"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:57:58"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:57:58"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:58:28"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:58:28"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:58:58"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:58:58"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:59:28"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:59:28"}
{"headers":{"accept":"*/*","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Incoming request","method":"GET","path":"/main.c5488450166cdc27b81d.hot-update.json","query":{},"timestamp":"2025-02-27 11:59:44"}
{"level":"warn","message":"[app.js]  Route not found: GET /main.c5488450166cdc27b81d.hot-update.json","timestamp":"2025-02-27 11:59:44"}
{"level":"info","message":"Performance measurement for http_request","performance":{"contentLength":"46","duration":3.8493,"method":"GET","operation":"http_request","path":"/main.c5488450166cdc27b81d.hot-update.json","status":404,"userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"timestamp":"2025-02-27 11:59:44"}
{"headers":{"accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Incoming request","method":"GET","path":"/login","query":{},"timestamp":"2025-02-27 11:59:44"}
{"level":"warn","message":"[app.js]  Route not found: GET /login","timestamp":"2025-02-27 11:59:44"}
{"level":"info","message":"Performance measurement for http_request","performance":{"contentLength":"46","duration":2.9799,"method":"GET","operation":"http_request","path":"/login","status":404,"userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"timestamp":"2025-02-27 11:59:44"}
{"headers":{"accept":"image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Incoming request","method":"GET","path":"/favicon.ico","query":{},"timestamp":"2025-02-27 11:59:45"}
{"level":"warn","message":"[app.js]  Route not found: GET /favicon.ico","timestamp":"2025-02-27 11:59:45"}
{"level":"info","message":"Performance measurement for http_request","performance":{"contentLength":"46","duration":1.6954,"method":"GET","operation":"http_request","path":"/favicon.ico","status":404,"userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"timestamp":"2025-02-27 11:59:45"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 11:59:58"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 11:59:58"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:00:28"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:00:28"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:00:58"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:00:58"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:01:28"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:01:28"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:01:58"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:01:58"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:02:28"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:02:28"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:02:58"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:02:58"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:03:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:03:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:03:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:03:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:04:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:04:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:04:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:04:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:05:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:05:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:05:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:05:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:06:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:06:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:06:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:06:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:07:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:07:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:07:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:07:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:08:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:08:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:08:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:08:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:09:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:09:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:09:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:09:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:10:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:10:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:10:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:10:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:11:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:11:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:11:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:11:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:12:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:12:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:12:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:12:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:13:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:13:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:13:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:13:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:14:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:14:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:14:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:14:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:15:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:15:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:15:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:15:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:16:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:16:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:16:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:16:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:17:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:17:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:17:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:17:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:18:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:18:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:18:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:18:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:19:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:19:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:19:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:19:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:20:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:20:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:20:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:20:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:21:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:21:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:21:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:21:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:22:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:22:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:22:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:22:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:23:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:23:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:23:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:23:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:24:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:24:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:24:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:24:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:25:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:25:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:25:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:25:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:26:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:26:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:26:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:26:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:27:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:27:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:27:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:27:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:28:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:28:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:28:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:28:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:29:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:29:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:29:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:29:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:30:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:30:29"}
{"headers":{"accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Incoming request","method":"GET","path":"/login","query":{},"timestamp":"2025-02-27 12:30:43"}
{"level":"warn","message":"[app.js]  Route not found: GET /login","timestamp":"2025-02-27 12:30:43"}
{"level":"info","message":"Performance measurement for http_request","performance":{"contentLength":"46","duration":1.9745,"method":"GET","operation":"http_request","path":"/login","status":404,"userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"timestamp":"2025-02-27 12:30:43"}
{"headers":{"accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Incoming request","method":"GET","path":"/","query":{},"timestamp":"2025-02-27 12:30:57"}
{"level":"warn","message":"[app.js]  Route not found: GET /","timestamp":"2025-02-27 12:30:57"}
{"level":"info","message":"Performance measurement for http_request","performance":{"contentLength":"46","duration":3.1104,"method":"GET","operation":"http_request","path":"/","status":404,"userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"timestamp":"2025-02-27 12:30:57"}
{"headers":{"accept":"image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Incoming request","method":"GET","path":"/favicon.ico","query":{},"timestamp":"2025-02-27 12:30:57"}
{"level":"warn","message":"[app.js]  Route not found: GET /favicon.ico","timestamp":"2025-02-27 12:30:57"}
{"level":"info","message":"Performance measurement for http_request","performance":{"contentLength":"46","duration":2.0816,"method":"GET","operation":"http_request","path":"/favicon.ico","status":404,"userAgent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"timestamp":"2025-02-27 12:30:57"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:30:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:30:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:31:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:31:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:31:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:31:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:32:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:32:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:32:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:32:59"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:33:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:33:29"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:33:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:33:59"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 12:34:21"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:34:21"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 12:34:21"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 12:34:21"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 12:34:21"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 12:34:21"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 12:34:21"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 12:34:21"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 12:34:21"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 12:34:21"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 12:34:21"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 12:34:21"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 12:34:21"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 12:34:21"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 12:34:21"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 12:34:21"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 12:34:21"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 12:34:21"}
{"level":"info","message":"[server.js] Starting server on port 3000","timestamp":"2025-02-27 12:34:21"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3000","timestamp":"2025-02-27 12:34:21"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 12:34:25"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:34:26"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 12:34:26"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 12:34:26"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 12:34:26"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 12:34:26"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 12:34:26"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 12:34:26"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 12:34:26"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 12:34:26"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 12:34:26"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 12:34:26"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 12:34:26"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 12:34:26"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 12:34:26"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 12:34:26"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 12:34:26"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 12:34:26"}
{"level":"info","message":"[server.js] Starting server on port 3000","timestamp":"2025-02-27 12:34:26"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3000","timestamp":"2025-02-27 12:34:26"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:34:56"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:34:56"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:35:26"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:35:26"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:35:56"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:35:56"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 12:36:09"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:36:09"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 12:36:09"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 12:36:09"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 12:36:09"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 12:36:09"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 12:36:09"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 12:36:09"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 12:36:09"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 12:36:09"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 12:36:09"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 12:36:09"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 12:36:09"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 12:36:09"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 12:36:10"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 12:36:10"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 12:36:10"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 12:36:10"}
{"level":"info","message":"[server.js] Starting server on port 3000","timestamp":"2025-02-27 12:36:10"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3000","timestamp":"2025-02-27 12:36:10"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 12:36:12"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:36:12"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 12:36:12"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 12:36:12"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 12:36:12"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 12:36:12"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 12:36:12"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 12:36:12"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 12:36:12"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 12:36:12"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 12:36:12"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 12:36:12"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 12:36:12"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 12:36:12"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 12:36:12"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 12:36:12"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 12:36:12"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 12:36:12"}
{"level":"info","message":"[server.js] Starting server on port 3000","timestamp":"2025-02-27 12:36:12"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3000","timestamp":"2025-02-27 12:36:12"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:37:12"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:38:12"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:39:12"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:40:12"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:41:12"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/","timestamp":"2025-02-27 12:41:52"}
{"level":"warn","message":"[app.js]  Route not found: GET /","timestamp":"2025-02-27 12:41:52"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":5.6286,"method":"GET","operation":"http_request","path":"/","status":404},"timestamp":"2025-02-27 12:41:52"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:42:12"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:43:12"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 12:43:43"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:43:43"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 12:43:43"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 12:43:43"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 12:43:43"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 12:43:43"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 12:43:43"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 12:43:43"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 12:43:43"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 12:43:43"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 12:43:43"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 12:43:43"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 12:43:43"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 12:43:43"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 12:43:43"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 12:43:43"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 12:43:43"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 12:43:43"}
{"level":"info","message":"[server.js] Starting server on port 3000","timestamp":"2025-02-27 12:43:43"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3000","timestamp":"2025-02-27 12:43:43"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 12:44:08"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:44:08"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 12:44:08"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 12:44:08"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 12:44:08"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 12:44:08"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 12:44:08"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 12:44:08"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 12:44:08"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 12:44:08"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 12:44:08"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 12:44:08"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 12:44:08"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 12:44:08"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 12:44:08"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 12:44:08"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 12:44:08"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 12:44:08"}
{"level":"info","message":"[server.js] Starting server on port 3000","timestamp":"2025-02-27 12:44:08"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3000","timestamp":"2025-02-27 12:44:08"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 12:44:17"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 12:44:17"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 12:44:17"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 12:44:17"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 12:44:17"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 12:44:17"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 12:44:17"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 12:44:17"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 12:44:17"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 12:44:17"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 12:44:17"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 12:44:17"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 12:44:17"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 12:44:17"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 12:44:17"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 12:44:17"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 12:44:17"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 12:44:17"}
{"level":"info","message":"[server.js] Starting server on port 3000","timestamp":"2025-02-27 12:44:17"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3000","timestamp":"2025-02-27 12:44:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:45:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:46:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:47:17"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/","timestamp":"2025-02-27 12:47:46"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":6.0989,"method":"GET","operation":"http_request","path":"/","status":200},"timestamp":"2025-02-27 12:47:46"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:48:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:49:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:50:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:51:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:52:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:53:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:54:17"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/","timestamp":"2025-02-27 12:55:03"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":3.3078,"method":"GET","operation":"http_request","path":"/","status":304},"timestamp":"2025-02-27 12:55:03"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:55:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:56:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:57:17"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/","timestamp":"2025-02-27 12:58:14"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.6017,"method":"GET","operation":"http_request","path":"/","status":304},"timestamp":"2025-02-27 12:58:14"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:58:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 12:59:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:00:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:01:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:02:17"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/","timestamp":"2025-02-27 13:02:52"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.7753,"method":"GET","operation":"http_request","path":"/","status":304},"timestamp":"2025-02-27 13:02:52"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:03:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:04:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:05:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:06:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:07:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:08:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:09:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:10:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:11:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:12:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:13:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:14:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:15:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:16:17"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/","timestamp":"2025-02-27 13:17:12"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.2651,"method":"GET","operation":"http_request","path":"/","status":304},"timestamp":"2025-02-27 13:17:12"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:17:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:18:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:19:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:20:17"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 13:21:37"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 13:21:38"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 13:21:38"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 13:21:38"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 13:21:38"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 13:21:38"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 13:21:38"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 13:21:38"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 13:21:38"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 13:21:38"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 13:21:38"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 13:21:38"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 13:21:38"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 13:21:38"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 13:21:38"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 13:21:38"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 13:21:38"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 13:21:38"}
{"level":"info","message":"[server.js] Starting server on port 3000","timestamp":"2025-02-27 13:21:38"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3000","timestamp":"2025-02-27 13:21:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:22:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:23:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:24:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:25:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:26:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:27:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:28:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:29:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:30:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:31:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:32:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:33:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:34:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:35:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:36:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:37:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:38:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:39:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:40:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:41:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:42:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:43:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:44:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:45:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:46:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:47:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:48:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:49:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:50:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:51:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:52:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:53:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:54:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:55:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:56:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:57:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:58:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 13:59:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:00:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:01:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:02:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:03:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:04:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:05:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:06:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:07:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:08:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:09:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:10:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:11:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:12:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:13:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:14:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:15:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:16:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:17:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:18:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:19:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:20:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:21:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:22:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:23:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:24:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:25:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:26:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:27:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:28:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:29:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:30:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:31:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:32:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:33:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:34:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:35:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:36:38"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 14:37:35"}
{"level":"warn","message":"[app.js]  Route not found: POST /execEventType","timestamp":"2025-02-27 14:37:35"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":3.1204,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 14:37:35"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 14:37:35"}
{"level":"warn","message":"[app.js]  Route not found: POST /execEventType","timestamp":"2025-02-27 14:37:35"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.4242,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 14:37:35"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:37:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:38:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:39:38"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 14:40:06"}
{"level":"warn","message":"[app.js]  Route not found: POST /execEventType","timestamp":"2025-02-27 14:40:06"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.6673,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 14:40:06"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 14:40:06"}
{"level":"warn","message":"[app.js]  Route not found: POST /execEventType","timestamp":"2025-02-27 14:40:06"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.7458,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 14:40:06"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:40:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:41:38"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 14:42:24"}
{"level":"warn","message":"[app.js]  Route not found: POST /execEventType","timestamp":"2025-02-27 14:42:24"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.9428,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 14:42:24"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 14:42:24"}
{"level":"warn","message":"[app.js]  Route not found: POST /execEventType","timestamp":"2025-02-27 14:42:24"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.4362,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 14:42:24"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 14:42:37"}
{"level":"warn","message":"[app.js]  Route not found: POST /execEventType","timestamp":"2025-02-27 14:42:37"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.1804,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 14:42:37"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 14:42:38"}
{"level":"warn","message":"[app.js]  Route not found: POST /execEventType","timestamp":"2025-02-27 14:42:38"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.1154,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 14:42:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:42:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:43:38"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 14:43:45"}
{"level":"warn","message":"[app.js]  Route not found: POST /execEventType","timestamp":"2025-02-27 14:43:45"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":3.8361,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 14:43:45"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 14:44:10"}
{"level":"warn","message":"[app.js]  Route not found: POST /execEventType","timestamp":"2025-02-27 14:44:10"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.1018,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 14:44:10"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 14:44:33"}
{"level":"warn","message":"[app.js]  Route not found: POST /execEventType","timestamp":"2025-02-27 14:44:33"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.3243,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 14:44:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:44:38"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 14:45:06"}
{"level":"warn","message":"[app.js]  Route not found: POST /execEventType","timestamp":"2025-02-27 14:45:06"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.4236,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 14:45:06"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:45:38"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 14:46:06"}
{"level":"warn","message":"[app.js]  Route not found: POST /execEventType","timestamp":"2025-02-27 14:46:06"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.3996,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 14:46:06"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:46:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:47:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:48:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:49:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:50:38"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 14:51:08"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 14:51:08"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 14:51:08"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 14:51:08"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 14:51:08"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 14:51:08"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 14:51:08"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 14:51:08"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 14:51:08"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 14:51:08"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 14:51:08"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 14:51:08"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 14:51:08"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 14:51:08"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 14:51:08"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 14:51:08"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 14:51:08"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 14:51:08"}
{"level":"info","message":"[server.js] Starting server on port 3000","timestamp":"2025-02-27 14:51:08"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3000","timestamp":"2025-02-27 14:51:08"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 14:51:13"}
{"level":"warn","message":"[app.js]  Route not found: POST /execEventType","timestamp":"2025-02-27 14:51:13"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.5359,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 14:51:13"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:52:08"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 14:52:21"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 14:52:21"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 14:52:21"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 14:52:21"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 14:52:21"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 14:52:21"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 14:52:21"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 14:52:21"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 14:52:21"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 14:52:21"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 14:52:21"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 14:52:21"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 14:52:21"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 14:52:21"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 14:52:21"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 14:52:21"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 14:52:21"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 14:52:21"}
{"level":"info","message":"[server.js] Starting server on port 3000","timestamp":"2025-02-27 14:52:21"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3000","timestamp":"2025-02-27 14:52:21"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 14:52:42"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 14:52:43"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 14:52:43"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 14:52:43"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 14:52:43"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 14:52:43"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 14:52:43"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 14:52:43"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 14:52:43"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 14:52:43"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 14:52:43"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 14:52:43"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 14:52:43"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 14:52:43"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 14:52:43"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 14:52:43"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 14:52:43"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 14:52:43"}
{"level":"info","message":"[server.js] Starting server on port 3000","timestamp":"2025-02-27 14:52:43"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3000","timestamp":"2025-02-27 14:52:43"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 14:53:00"}
{"level":"warn","message":"[app.js]  Route not found: POST /execEventType","timestamp":"2025-02-27 14:53:00"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.9484,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 14:53:00"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:53:42"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 14:53:53"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 14:53:53"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 14:53:53"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 14:53:53"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 14:53:53"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 14:53:53"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 14:53:53"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 14:53:53"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 14:53:53"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 14:53:53"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 14:53:53"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 14:53:53"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 14:53:53"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 14:53:53"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 14:53:53"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 14:53:53"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 14:53:53"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 14:53:53"}
{"level":"info","message":"[server.js] Starting server on port 3000","timestamp":"2025-02-27 14:53:53"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3000","timestamp":"2025-02-27 14:53:53"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 14:54:04"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 14:54:04"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 14:54:04"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 14:54:04"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 14:54:04"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 14:54:04"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 14:54:04"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 14:54:04"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 14:54:04"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 14:54:04"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 14:54:04"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 14:54:04"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 14:54:04"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 14:54:04"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 14:54:04"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 14:54:04"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 14:54:04"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 14:54:04"}
{"level":"info","message":"[server.js] Starting server on port 3000","timestamp":"2025-02-27 14:54:04"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3000","timestamp":"2025-02-27 14:54:04"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 14:54:12"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 14:54:12"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 14:54:12"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 14:54:12"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 14:54:12"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 14:54:12"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 14:54:12"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 14:54:12"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 14:54:12"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 14:54:12"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 14:54:12"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 14:54:12"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 14:54:12"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 14:54:12"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 14:54:12"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 14:54:12"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 14:54:12"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 14:54:12"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 14:54:12"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 14:54:12"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 14:54:30"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 14:54:30"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 14:54:30"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 14:54:30"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 14:54:30"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 14:54:30"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 14:54:30"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 14:54:30"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 14:54:30"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 14:54:30"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 14:54:30"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 14:54:30"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 14:54:30"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 14:54:30"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 14:54:30"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 14:54:30"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 14:54:30"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 14:54:30"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 14:54:30"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 14:54:30"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:55:30"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 14:56:05"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 14:56:06"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 14:56:06"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 14:56:06"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 14:56:06"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 14:56:06"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 14:56:06"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 14:56:06"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 14:56:06"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 14:56:06"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 14:56:06"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 14:56:06"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 14:56:06"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 14:56:06"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 14:56:06"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 14:56:06"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 14:56:06"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 14:56:06"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 14:56:06"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 14:56:06"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 14:56:13"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 14:56:13"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 14:56:13"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 14:56:13"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 14:56:13"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 14:56:13"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 14:56:13"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 14:56:13"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 14:56:13"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 14:56:13"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 14:56:13"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 14:56:13"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 14:56:13"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 14:56:13"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 14:56:13"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 14:56:13"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 14:56:13"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 14:56:13"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 14:56:13"}
{"level":"info","message":"[server.js] Server timeouts configured: request=30000ms, keepAlive=65000ms","timestamp":"2025-02-27 14:56:13"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 14:56:13"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 14:56:40"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 14:56:40"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 14:56:40"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 14:56:40"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 14:56:40"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 14:56:40"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 14:56:40"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 14:56:40"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 14:56:40"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 14:56:40"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 14:56:40"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 14:56:40"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 14:56:40"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 14:56:40"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 14:56:40"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 14:56:40"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 14:56:40"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 14:56:40"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 14:56:40"}
{"level":"info","message":"[server.js] Server timeouts configured: request=30000ms, keepAlive=65000ms","timestamp":"2025-02-27 14:56:40"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 14:56:40"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 14:57:00"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 14:57:01"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 14:57:01"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 14:57:01"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 14:57:01"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 14:57:01"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 14:57:01"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 14:57:01"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 14:57:01"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 14:57:01"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 14:57:01"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 14:57:01"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 14:57:01"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 14:57:01"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 14:57:01"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 14:57:01"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 14:57:01"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 14:57:01"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 14:57:01"}
{"level":"info","message":"[server.js] Server timeouts configured: request=30000ms, keepAlive=65000ms","timestamp":"2025-02-27 14:57:01"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 14:57:01"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:58:00"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 14:58:05"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 14:58:05"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 14:58:05"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 14:58:05"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 14:58:05"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 14:58:05"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 14:58:05"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 14:58:05"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 14:58:05"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 14:58:05"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 14:58:05"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 14:58:05"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 14:58:05"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 14:58:05"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 14:58:05"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 14:58:05"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 14:58:05"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 14:58:05"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 14:58:05"}
{"level":"info","message":"[server.js] Server timeouts configured: request=30000ms, keepAlive=65000ms","timestamp":"2025-02-27 14:58:05"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 14:58:05"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 14:58:35"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 14:58:35"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 14:58:35"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 14:58:35"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 14:58:35"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 14:58:35"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 14:58:35"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 14:58:35"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 14:58:35"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 14:58:35"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 14:58:35"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 14:58:35"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 14:58:35"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 14:58:35"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 14:58:36"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 14:58:36"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 14:58:36"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 14:58:36"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 14:58:36"}
{"level":"info","message":"[server.js] Server timeouts configured: request=30000ms, keepAlive=65000ms","timestamp":"2025-02-27 14:58:36"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 14:58:36"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 14:59:35"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 14:59:45"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 14:59:46"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 14:59:46"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 14:59:46"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 14:59:46"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 14:59:46"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 14:59:46"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 14:59:46"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 14:59:46"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 14:59:46"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 14:59:46"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 14:59:46"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 14:59:46"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 14:59:46"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 14:59:46"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 14:59:46"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 14:59:46"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 14:59:46"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 14:59:46"}
{"level":"info","message":"[server.js] Server timeouts configured: request=30000ms, keepAlive=65000ms","timestamp":"2025-02-27 14:59:46"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 14:59:46"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 15:00:01"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 15:00:02"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 15:00:02"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 15:00:02"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 15:00:02"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 15:00:02"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 15:00:02"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 15:00:02"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 15:00:02"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 15:00:02"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 15:00:02"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 15:00:02"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 15:00:02"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 15:00:02"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 15:00:02"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 15:00:02"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 15:00:02"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 15:00:02"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 15:00:02"}
{"level":"info","message":"[server.js] Server timeouts configured: request=30000ms, keepAlive=65000ms","timestamp":"2025-02-27 15:00:02"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 15:00:02"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:01:01"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:02:01"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:03:01"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 15:03:12"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 15:03:13"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 15:03:13"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 15:03:13"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 15:03:13"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 15:03:13"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 15:03:13"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 15:03:13"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 15:03:13"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 15:03:13"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 15:03:13"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 15:03:13"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 15:03:13"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 15:03:13"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 15:03:13"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 15:03:13"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 15:03:13"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 15:03:13"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 15:03:13"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 15:03:13"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 15:03:18"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 15:03:18"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 15:03:18"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 15:03:18"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 15:03:18"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 15:03:18"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 15:03:18"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 15:03:18"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 15:03:18"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 15:03:18"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 15:03:18"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 15:03:18"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 15:03:18"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 15:03:18"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 15:03:18"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 15:03:18"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 15:03:18"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 15:03:18"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 15:03:18"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 15:03:18"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 15:03:30"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 15:03:31"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 15:03:31"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 15:03:31"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 15:03:31"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 15:03:31"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 15:03:31"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 15:03:31"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 15:03:31"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 15:03:31"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 15:03:31"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 15:03:31"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 15:03:31"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 15:03:31"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 15:03:31"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 15:03:31"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 15:03:31"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 15:03:31"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 15:03:31"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 15:03:31"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:04:30"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:05:30"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 15:06:27"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 15:06:27"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 15:06:27"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 15:06:27"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 15:06:27"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 15:06:27"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 15:06:27"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 15:06:27"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 15:06:27"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 15:06:27"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 15:06:27"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 15:06:27"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 15:06:27"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 15:06:27"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 15:06:27"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 15:06:27"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 15:06:27"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 15:06:27"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 15:06:27"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 15:06:27"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 15:06:47"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 15:06:47"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 15:06:47"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 15:06:47"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 15:06:47"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 15:06:47"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 15:06:47"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 15:06:47"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 15:06:47"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 15:06:47"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 15:06:47"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 15:06:47"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 15:06:47"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 15:06:47"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 15:06:47"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 15:06:47"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 15:06:48"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 15:06:48"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 15:06:48"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 15:06:48"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:07:47"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:08:47"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:09:47"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:10:47"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:11:47"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:12:47"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 15:13:11"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 15:13:11"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 15:13:11"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 15:13:11"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 15:13:11"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 15:13:11"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 15:13:11"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 15:13:11"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 15:13:11"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 15:13:11"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 15:13:11"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 15:13:11"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 15:13:11"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 15:13:11"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 15:13:12"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 15:13:12"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 15:13:12"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 15:13:12"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 15:13:12"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 15:13:12"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 15:13:30"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 15:13:30"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 15:13:30"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 15:13:30"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 15:13:30"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 15:13:30"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 15:13:30"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 15:13:30"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 15:13:30"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 15:13:30"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 15:13:30"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 15:13:30"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 15:13:30"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 15:13:30"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 15:13:30"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 15:13:30"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 15:13:31"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 15:13:31"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 15:13:31"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 15:13:31"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:14:30"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:15:30"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:16:30"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:17:30"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 15:18:17"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 15:18:17"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 15:18:17"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 15:18:17"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 15:18:17"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 15:18:17"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 15:18:17"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 15:18:17"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 15:18:17"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 15:18:17"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 15:18:17"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 15:18:17"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 15:18:17"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 15:18:17"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 15:18:18"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 15:18:18"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 15:18:18"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 15:18:18"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 15:18:18"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 15:18:18"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 15:18:28"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 15:18:28"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 15:18:28"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.2461,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 15:18:28"}
{"level":"info","message":"[app.js]  Request received: POST /api/execEventType","timestamp":"2025-02-27 15:18:30"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-02-27 15:18:30"}
{"body":{"eventType":"ingrBtchList","params":{":ingrID":16}},"headers":{"accept":"*/*","content-length":"52","content-type":"application/json","host":"localhost:3001","user-agent":"insomnia/10.2.0"},"level":"http","message":"[execEventType.js] Request received","method":"POST","originalUrl":"/api/execEventType","timestamp":"2025-02-27 15:18:30"}
{":ingrID":16,"level":"debug","message":"[execEventType.js] Parameters:","timestamp":"2025-02-27 15:18:30"}
{"level":"info","message":"[eventTypeManager.js] Event types refreshed at Thu Feb 27 2025 15:18:30 GMT-0600 (Central Standard Time)","timestamp":"2025-02-27 15:18:30"}
{"level":"debug","message":"[execEventType.js] Executing query with event type method: GET","timestamp":"2025-02-27 15:18:30"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = :ingrID\nLIMIT 25","params":{":ingrID":16},"timestamp":"2025-02-27 15:18:30"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-02-27 15:18:30"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":0.7225,"errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-02-27 15:18:30"}
{"level":"error","message":"Bind parameters must be array if namedPlaceholders parameter is not enabled","stack":"Error: Bind parameters must be array if namedPlaceholders parameter is not enabled\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at executeQuery (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\utils\\dbUtils.js:30:45)\n    at module.exports (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\execEventType.js:35:26)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 15:18:30"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-02-27 15:18:30"}
{"level":"error","message":"Bind parameters must be array if namedPlaceholders parameter is not enabled","stack":"Error: Bind parameters must be array if namedPlaceholders parameter is not enabled\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at executeQuery (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\utils\\dbUtils.js:30:45)\n    at module.exports (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\execEventType.js:35:26)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 15:18:30"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":8.9283,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-02-27 15:18:30"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 15:19:01"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 15:19:01"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 15:19:01"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.2368,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 15:19:01"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:19:17"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 15:20:06"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 15:20:06"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 15:20:06"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.2754,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 15:20:06"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:20:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:21:17"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 15:22:15"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 15:22:15"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 15:22:15"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.1861,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 15:22:15"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:22:17"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 15:22:28"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 15:22:29"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 15:22:29"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 15:22:29"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 15:22:29"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 15:22:29"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 15:22:29"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 15:22:29"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 15:22:29"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 15:22:29"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 15:22:29"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 15:22:29"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 15:22:29"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 15:22:29"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 15:22:29"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 15:22:29"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 15:22:29"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 15:22:29"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 15:23:07"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 15:23:07"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 15:23:07"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 15:23:07"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 15:23:07"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 15:23:07"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 15:23:07"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 15:23:07"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 15:23:07"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 15:23:07"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 15:23:07"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 15:23:07"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 15:23:07"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 15:23:07"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 15:23:07"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 15:23:07"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 15:23:07"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 15:23:07"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 15:23:07"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-02-27 15:23:07"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 15:23:07"}
{"level":"info","message":"[app.js]  Request received: POST /api/execEventType","timestamp":"2025-02-27 15:23:17"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-02-27 15:23:17"}
{"body":{"eventType":"ingrBtchList","params":{":ingrID":16}},"headers":{"accept":"*/*","content-length":"52","content-type":"application/json","host":"localhost:3001","user-agent":"insomnia/10.2.0"},"level":"http","message":"[execEventType.js] Request received","method":"POST","originalUrl":"/api/execEventType","timestamp":"2025-02-27 15:23:17"}
{":ingrID":16,"level":"debug","message":"[execEventType.js] Parameters:","timestamp":"2025-02-27 15:23:17"}
{"level":"info","message":"[eventTypeManager.js] Event types refreshed at Thu Feb 27 2025 15:23:17 GMT-0600 (Central Standard Time)","timestamp":"2025-02-27 15:23:17"}
{"level":"debug","message":"[execEventType.js] Executing query with event type method: GET","timestamp":"2025-02-27 15:23:17"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = :ingrID\nLIMIT 25","params":{":ingrID":16},"timestamp":"2025-02-27 15:23:17"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-02-27 15:23:17"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":2.9292,"errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-02-27 15:23:17"}
{"level":"error","message":"Bind parameters must be array if namedPlaceholders parameter is not enabled","stack":"Error: Bind parameters must be array if namedPlaceholders parameter is not enabled\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at executeQuery (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\utils\\dbUtils.js:30:45)\n    at module.exports (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\execEventType.js:35:26)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 15:23:17"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-02-27 15:23:17"}
{"level":"error","message":"Bind parameters must be array if namedPlaceholders parameter is not enabled","stack":"Error: Bind parameters must be array if namedPlaceholders parameter is not enabled\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at executeQuery (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\utils\\dbUtils.js:30:45)\n    at module.exports (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\execEventType.js:35:26)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 15:23:17"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":15.8147,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-02-27 15:23:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:24:07"}
{"level":"info","message":"[app.js]  Request received: POST /api/execEventType","timestamp":"2025-02-27 15:25:01"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-02-27 15:25:01"}
{"body":{"eventType":"ingrBtchList","params":{":ingrID":16}},"headers":{"accept":"*/*","content-length":"52","content-type":"application/json","host":"localhost:3001","user-agent":"insomnia/10.2.0"},"level":"http","message":"[execEventType.js] Request received","method":"POST","originalUrl":"/api/execEventType","timestamp":"2025-02-27 15:25:01"}
{":ingrID":16,"level":"debug","message":"[execEventType.js] Parameters:","timestamp":"2025-02-27 15:25:01"}
{"level":"debug","message":"[execEventType.js] Executing query with event type method: GET","timestamp":"2025-02-27 15:25:01"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = :ingrID\nLIMIT 25","params":{":ingrID":16},"timestamp":"2025-02-27 15:25:01"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-02-27 15:25:01"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":1.2197,"errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-02-27 15:25:01"}
{"level":"error","message":"Bind parameters must be array if namedPlaceholders parameter is not enabled","stack":"Error: Bind parameters must be array if namedPlaceholders parameter is not enabled\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at executeQuery (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\utils\\dbUtils.js:30:45)\n    at module.exports (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\execEventType.js:35:26)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 15:25:01"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-02-27 15:25:01"}
{"level":"error","message":"Bind parameters must be array if namedPlaceholders parameter is not enabled","stack":"Error: Bind parameters must be array if namedPlaceholders parameter is not enabled\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at executeQuery (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\utils\\dbUtils.js:30:45)\n    at module.exports (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\execEventType.js:35:26)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 15:25:01"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":7.0958,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-02-27 15:25:01"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:25:07"}
{"level":"info","message":"[app.js]  Request received: POST /api/execEventType","timestamp":"2025-02-27 15:25:29"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-02-27 15:25:29"}
{"body":{"eventType":"ingrBtchList","params":{":ingrID":16}},"headers":{"accept":"*/*","content-length":"52","content-type":"application/json","host":"localhost:3001","user-agent":"insomnia/10.2.0"},"level":"http","message":"[execEventType.js] Request received","method":"POST","originalUrl":"/api/execEventType","timestamp":"2025-02-27 15:25:29"}
{":ingrID":16,"level":"debug","message":"[execEventType.js] Parameters:","timestamp":"2025-02-27 15:25:29"}
{"level":"debug","message":"[execEventType.js] Executing query with event type method: GET","timestamp":"2025-02-27 15:25:29"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = :ingrID\nLIMIT 25","params":{":ingrID":16},"timestamp":"2025-02-27 15:25:29"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-02-27 15:25:29"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":0.8958,"errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-02-27 15:25:29"}
{"level":"error","message":"Bind parameters must be array if namedPlaceholders parameter is not enabled","stack":"Error: Bind parameters must be array if namedPlaceholders parameter is not enabled\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at executeQuery (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\utils\\dbUtils.js:30:45)\n    at module.exports (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\execEventType.js:35:26)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 15:25:29"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-02-27 15:25:29"}
{"level":"error","message":"Bind parameters must be array if namedPlaceholders parameter is not enabled","stack":"Error: Bind parameters must be array if namedPlaceholders parameter is not enabled\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at executeQuery (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\utils\\dbUtils.js:30:45)\n    at module.exports (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\execEventType.js:35:26)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 15:25:29"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":4.7526,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-02-27 15:25:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:26:07"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 15:26:32"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 15:26:32"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 15:26:32"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.0682,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 15:26:32"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:27:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:28:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:29:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:30:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:31:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:32:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:33:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:34:07"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 15:35:05"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 15:35:05"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 15:35:05"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.3767,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 15:35:05"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:35:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:36:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:37:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:38:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:39:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:40:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:41:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:42:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:43:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:44:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:45:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:46:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:47:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:48:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:49:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:50:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:51:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:52:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:53:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:54:07"}
{"level":"info","message":"[app.js]  Request received: POST /api/execEventType","timestamp":"2025-02-27 15:54:51"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-02-27 15:54:51"}
{"body":{"eventType":"ingrBtchList","params":{":ingrID":16}},"headers":{"accept":"*/*","content-length":"52","content-type":"application/json","host":"localhost:3001","user-agent":"insomnia/10.2.0"},"level":"http","message":"[execEventType.js] Request received","method":"POST","originalUrl":"/api/execEventType","timestamp":"2025-02-27 15:54:51"}
{":ingrID":16,"level":"debug","message":"[execEventType.js] Parameters:","timestamp":"2025-02-27 15:54:51"}
{"level":"debug","message":"[execEventType.js] Executing query with event type method: GET","timestamp":"2025-02-27 15:54:51"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = :ingrID\nLIMIT 25","params":{":ingrID":16},"timestamp":"2025-02-27 15:54:51"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-02-27 15:54:51"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":0.9044,"errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-02-27 15:54:51"}
{"level":"error","message":"Bind parameters must be array if namedPlaceholders parameter is not enabled","stack":"Error: Bind parameters must be array if namedPlaceholders parameter is not enabled\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at executeQuery (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\utils\\dbUtils.js:30:45)\n    at module.exports (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\execEventType.js:35:26)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 15:54:51"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-02-27 15:54:51"}
{"level":"error","message":"Bind parameters must be array if namedPlaceholders parameter is not enabled","stack":"Error: Bind parameters must be array if namedPlaceholders parameter is not enabled\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at executeQuery (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\utils\\dbUtils.js:30:45)\n    at module.exports (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\execEventType.js:35:26)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 15:54:51"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":5.4462,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-02-27 15:54:51"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:55:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:56:07"}
{"level":"info","message":"[app.js]  Request received: POST /api/execEventType","timestamp":"2025-02-27 15:56:16"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-02-27 15:56:16"}
{"body":{"eventType":"ingrBtchList","params":{":ingrID":16}},"headers":{"accept":"*/*","content-length":"52","content-type":"application/json","host":"localhost:3001","user-agent":"insomnia/10.2.0"},"level":"http","message":"[execEventType.js] Request received","method":"POST","originalUrl":"/api/execEventType","timestamp":"2025-02-27 15:56:16"}
{":ingrID":16,"level":"debug","message":"[execEventType.js] Parameters:","timestamp":"2025-02-27 15:56:16"}
{"level":"debug","message":"[execEventType.js] Executing query with event type method: GET","timestamp":"2025-02-27 15:56:16"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = :ingrID\nLIMIT 25","params":{":ingrID":16},"timestamp":"2025-02-27 15:56:16"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-02-27 15:56:16"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":0.6784,"errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-02-27 15:56:16"}
{"level":"error","message":"Bind parameters must be array if namedPlaceholders parameter is not enabled","stack":"Error: Bind parameters must be array if namedPlaceholders parameter is not enabled\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at executeQuery (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\utils\\dbUtils.js:30:45)\n    at module.exports (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\execEventType.js:35:26)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 15:56:16"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-02-27 15:56:16"}
{"level":"error","message":"Bind parameters must be array if namedPlaceholders parameter is not enabled","stack":"Error: Bind parameters must be array if namedPlaceholders parameter is not enabled\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at executeQuery (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\utils\\dbUtils.js:30:45)\n    at module.exports (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\execEventType.js:35:26)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 15:56:16"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":3.3183,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-02-27 15:56:16"}
{"level":"info","message":"[app.js]  Request received: POST /api/execEventType","timestamp":"2025-02-27 15:56:37"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-02-27 15:56:37"}
{"body":{"eventType":"ingrBtchList","params":{":ingrID":16}},"headers":{"accept":"*/*","content-length":"52","content-type":"application/json","host":"localhost:3001","user-agent":"insomnia/10.2.0"},"level":"http","message":"[execEventType.js] Request received","method":"POST","originalUrl":"/api/execEventType","timestamp":"2025-02-27 15:56:37"}
{":ingrID":16,"level":"debug","message":"[execEventType.js] Parameters:","timestamp":"2025-02-27 15:56:37"}
{"level":"debug","message":"[execEventType.js] Executing query with event type method: GET","timestamp":"2025-02-27 15:56:37"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = :ingrID\nLIMIT 25","params":{":ingrID":16},"timestamp":"2025-02-27 15:56:37"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-02-27 15:56:37"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":0.5993,"errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-02-27 15:56:37"}
{"level":"error","message":"Bind parameters must be array if namedPlaceholders parameter is not enabled","stack":"Error: Bind parameters must be array if namedPlaceholders parameter is not enabled\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at executeQuery (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\utils\\dbUtils.js:30:45)\n    at module.exports (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\execEventType.js:35:26)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 15:56:37"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-02-27 15:56:37"}
{"level":"error","message":"Bind parameters must be array if namedPlaceholders parameter is not enabled","stack":"Error: Bind parameters must be array if namedPlaceholders parameter is not enabled\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at executeQuery (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\utils\\dbUtils.js:30:45)\n    at module.exports (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\execEventType.js:35:26)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 15:56:37"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":4.4482,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-02-27 15:56:37"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:57:07"}
{"level":"info","message":"[app.js]  Request received: POST /api/execEventType","timestamp":"2025-02-27 15:57:48"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-02-27 15:57:48"}
{"body":{"eventType":"ingrBtchList","params":{":ingrID":16}},"headers":{"accept":"*/*","content-length":"52","content-type":"application/json","host":"localhost:3001","user-agent":"insomnia/10.2.0"},"level":"http","message":"[execEventType.js] Request received","method":"POST","originalUrl":"/api/execEventType","timestamp":"2025-02-27 15:57:48"}
{":ingrID":16,"level":"debug","message":"[execEventType.js] Parameters:","timestamp":"2025-02-27 15:57:48"}
{"level":"debug","message":"[execEventType.js] Executing query with event type method: GET","timestamp":"2025-02-27 15:57:48"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = :ingrID\nLIMIT 25","params":{":ingrID":16},"timestamp":"2025-02-27 15:57:48"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-02-27 15:57:48"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":0.8105,"errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-02-27 15:57:48"}
{"level":"error","message":"Bind parameters must be array if namedPlaceholders parameter is not enabled","stack":"Error: Bind parameters must be array if namedPlaceholders parameter is not enabled\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at executeQuery (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\utils\\dbUtils.js:30:45)\n    at module.exports (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\execEventType.js:35:26)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 15:57:48"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-02-27 15:57:48"}
{"level":"error","message":"Bind parameters must be array if namedPlaceholders parameter is not enabled","stack":"Error: Bind parameters must be array if namedPlaceholders parameter is not enabled\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at executeQuery (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\utils\\dbUtils.js:30:45)\n    at module.exports (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\execEventType.js:35:26)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 15:57:48"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":4.0687,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-02-27 15:57:48"}
{"level":"info","message":"[app.js]  Request received: POST /api/execEventType","timestamp":"2025-02-27 15:58:00"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-02-27 15:58:00"}
{"body":{"eventType":"ingrBtchList","params":{":ingrID":16}},"headers":{"accept":"*/*","content-length":"52","content-type":"application/json","host":"localhost:3001","user-agent":"insomnia/10.2.0"},"level":"http","message":"[execEventType.js] Request received","method":"POST","originalUrl":"/api/execEventType","timestamp":"2025-02-27 15:58:00"}
{":ingrID":16,"level":"debug","message":"[execEventType.js] Parameters:","timestamp":"2025-02-27 15:58:00"}
{"level":"debug","message":"[execEventType.js] Executing query with event type method: GET","timestamp":"2025-02-27 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = :ingrID\nLIMIT 25","params":{":ingrID":16},"timestamp":"2025-02-27 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-02-27 15:58:00"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":0.8133,"errorType":"Error","method":"GET","operation":"database_query","success":false},"timestamp":"2025-02-27 15:58:00"}
{"level":"error","message":"Bind parameters must be array if namedPlaceholders parameter is not enabled","stack":"Error: Bind parameters must be array if namedPlaceholders parameter is not enabled\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at executeQuery (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\utils\\dbUtils.js:30:45)\n    at module.exports (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\execEventType.js:35:26)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 15:58:00"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-02-27 15:58:00"}
{"level":"error","message":"Bind parameters must be array if namedPlaceholders parameter is not enabled","stack":"Error: Bind parameters must be array if namedPlaceholders parameter is not enabled\n    at PromisePool.execute (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\node_modules\\mysql2\\lib\\promise\\pool.js:54:22)\n    at executeQuery (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\utils\\dbUtils.js:30:45)\n    at module.exports (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\execEventType.js:35:26)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 15:58:00"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":7.3005,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-02-27 15:58:00"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:58:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 15:59:07"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 15:59:24"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 15:59:24"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 15:59:24"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 15:59:24"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 15:59:24"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 15:59:24"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 15:59:24"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 15:59:24"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 15:59:24"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 15:59:24"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 15:59:24"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 15:59:24"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 15:59:24"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 15:59:24"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 15:59:24"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 15:59:24"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 15:59:24"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 15:59:24"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 15:59:24"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-02-27 15:59:24"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 15:59:24"}
{"level":"info","message":"[app.js]  Request received: POST /api/execEventType","timestamp":"2025-02-27 15:59:30"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-02-27 15:59:30"}
{"body":{"eventType":"ingrBtchList","params":{":ingrID":16}},"headers":{"accept":"*/*","content-length":"52","content-type":"application/json","host":"localhost:3001","user-agent":"insomnia/10.2.0"},"level":"http","message":"[execEventType.js] Request received","method":"POST","originalUrl":"/api/execEventType","timestamp":"2025-02-27 15:59:30"}
{":ingrID":16,"level":"debug","message":"[execEventType.js] Parameters:","timestamp":"2025-02-27 15:59:30"}
{"level":"info","message":"[eventTypeManager.js] Event types refreshed at Thu Feb 27 2025 15:59:30 GMT-0600 (Central Standard Time)","timestamp":"2025-02-27 15:59:30"}
{"level":"debug","message":"[execEventType.js] Executing query with event type method: GET","timestamp":"2025-02-27 15:59:30"}
{"level":"debug","message":"[queryResolver.js] Original query:","params":{":ingrID":16},"qrySQL":"SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = :ingrID\nLIMIT 25","timestamp":"2025-02-27 15:59:30"}
{"level":"debug","message":"[queryResolver.js] Processing parameter:","paramName":":ingrID","paramValue":16,"timestamp":"2025-02-27 15:59:30"}
{"level":"debug","message":"[queryResolver.js] Modified query:","qrySQL":"SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = 16\nLIMIT 25","timestamp":"2025-02-27 15:59:30"}
{"level":"debug","message":"[queryResolver.js] Created request body:","qryMod":"SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = 16\nLIMIT 25","timestamp":"2025-02-27 15:59:30"}
{"0":"S","1":"E","10":"R","11":"O","12":"M","13":" ","14":"a","15":"p","16":"i","17":"_","18":"w","19":"f","2":"L","20":".","21":"i","22":"n","23":"g","24":"r","25":"B","26":"t","27":"c","28":"h","29":"L","3":"E","30":"i","31":"s","32":"t","33":"\n","34":"w","35":"h","36":"e","37":"r","38":"e","39":" ","4":"C","40":" ","41":"i","42":"n","43":"g","44":"r","45":"I","46":"D","47":" ","48":"=","49":" ","5":"T","50":"1","51":"6","52":"\n","53":"L","54":"I","55":"M","56":"I","57":"T","58":" ","59":"2","6":" ","60":"5","7":"*","8":"\n","9":"F","level":"debug","message":"[execEventType.js] Modified query:","timestamp":"2025-02-27 15:59:30"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = 16\nLIMIT 25","timestamp":"2025-02-27 15:59:30"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-02-27 15:59:30"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-02-27 15:59:30"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":84.771,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-02-27 15:59:30"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-02-27 15:59:30"}
{"level":"info","message":"[execEventType.js] Query executed successfully for ingrBtchList","timestamp":"2025-02-27 15:59:30"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":99.0905,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-02-27 15:59:30"}
{"level":"info","message":"[app.js]  Request received: POST /api/execEventType","timestamp":"2025-02-27 15:59:48"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-02-27 15:59:48"}
{"body":{"eventType":"ingrBtchList","params":{":ingrID":16}},"headers":{"accept":"*/*","content-length":"52","content-type":"application/json","host":"localhost:3001","user-agent":"insomnia/10.2.0"},"level":"http","message":"[execEventType.js] Request received","method":"POST","originalUrl":"/api/execEventType","timestamp":"2025-02-27 15:59:48"}
{":ingrID":16,"level":"debug","message":"[execEventType.js] Parameters:","timestamp":"2025-02-27 15:59:48"}
{"level":"debug","message":"[execEventType.js] Executing query with event type method: GET","timestamp":"2025-02-27 15:59:48"}
{"level":"debug","message":"[queryResolver.js] Original query:","params":{":ingrID":16},"qrySQL":"SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = :ingrID\nLIMIT 25","timestamp":"2025-02-27 15:59:48"}
{"level":"debug","message":"[queryResolver.js] Processing parameter:","paramName":":ingrID","paramValue":16,"timestamp":"2025-02-27 15:59:48"}
{"level":"debug","message":"[queryResolver.js] Modified query:","qrySQL":"SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = 16\nLIMIT 25","timestamp":"2025-02-27 15:59:48"}
{"level":"debug","message":"[queryResolver.js] Created request body:","qryMod":"SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = 16\nLIMIT 25","timestamp":"2025-02-27 15:59:48"}
{"0":"S","1":"E","10":"R","11":"O","12":"M","13":" ","14":"a","15":"p","16":"i","17":"_","18":"w","19":"f","2":"L","20":".","21":"i","22":"n","23":"g","24":"r","25":"B","26":"t","27":"c","28":"h","29":"L","3":"E","30":"i","31":"s","32":"t","33":"\n","34":"w","35":"h","36":"e","37":"r","38":"e","39":" ","4":"C","40":" ","41":"i","42":"n","43":"g","44":"r","45":"I","46":"D","47":" ","48":"=","49":" ","5":"T","50":"1","51":"6","52":"\n","53":"L","54":"I","55":"M","56":"I","57":"T","58":" ","59":"2","6":" ","60":"5","7":"*","8":"\n","9":"F","level":"debug","message":"[execEventType.js] Modified query:","timestamp":"2025-02-27 15:59:48"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = 16\nLIMIT 25","timestamp":"2025-02-27 15:59:48"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-02-27 15:59:48"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-02-27 15:59:48"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":47.2363,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-02-27 15:59:48"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-02-27 15:59:48"}
{"level":"info","message":"[execEventType.js] Query executed successfully for ingrBtchList","timestamp":"2025-02-27 15:59:48"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":53.3528,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-02-27 15:59:48"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:00:24"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:01:24"}
{"level":"info","message":"[app.js]  Request received: POST /api/execEventType","timestamp":"2025-02-27 16:01:56"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-02-27 16:01:56"}
{"body":{"eventType":"ingrBtchList","params":{":ingrID":16}},"headers":{"accept":"*/*","content-length":"52","content-type":"application/json","host":"localhost:3001","user-agent":"insomnia/10.2.0"},"level":"http","message":"[execEventType.js] Request received","method":"POST","originalUrl":"/api/execEventType","timestamp":"2025-02-27 16:01:56"}
{":ingrID":16,"level":"debug","message":"[execEventType.js] Parameters:","timestamp":"2025-02-27 16:01:56"}
{"level":"debug","message":"[execEventType.js] Executing query with event type method: GET","timestamp":"2025-02-27 16:01:56"}
{"level":"debug","message":"[queryResolver.js] Original query:","params":{":ingrID":16},"qrySQL":"SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = :ingrID\nLIMIT 25","timestamp":"2025-02-27 16:01:56"}
{"level":"debug","message":"[queryResolver.js] Processing parameter:","paramName":":ingrID","paramValue":16,"timestamp":"2025-02-27 16:01:56"}
{"level":"debug","message":"[queryResolver.js] Modified query:","qrySQL":"SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = 16\nLIMIT 25","timestamp":"2025-02-27 16:01:56"}
{"level":"debug","message":"[queryResolver.js] Created request body:","qryMod":"SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = 16\nLIMIT 25","timestamp":"2025-02-27 16:01:56"}
{"0":"S","1":"E","10":"R","11":"O","12":"M","13":" ","14":"a","15":"p","16":"i","17":"_","18":"w","19":"f","2":"L","20":".","21":"i","22":"n","23":"g","24":"r","25":"B","26":"t","27":"c","28":"h","29":"L","3":"E","30":"i","31":"s","32":"t","33":"\n","34":"w","35":"h","36":"e","37":"r","38":"e","39":" ","4":"C","40":" ","41":"i","42":"n","43":"g","44":"r","45":"I","46":"D","47":" ","48":"=","49":" ","5":"T","50":"1","51":"6","52":"\n","53":"L","54":"I","55":"M","56":"I","57":"T","58":" ","59":"2","6":" ","60":"5","7":"*","8":"\n","9":"F","level":"debug","message":"[execEventType.js] Modified query:","timestamp":"2025-02-27 16:01:56"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = 16\nLIMIT 25","timestamp":"2025-02-27 16:01:56"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-02-27 16:01:56"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-02-27 16:01:56"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":60.7577,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-02-27 16:01:56"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-02-27 16:01:56"}
{"level":"info","message":"[execEventType.js] Query executed successfully for ingrBtchList","timestamp":"2025-02-27 16:01:56"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":67.3027,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-02-27 16:01:56"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:02:24"}
{"level":"info","message":"[app.js]  Request received: POST /api/execEventType","timestamp":"2025-02-27 16:02:30"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-02-27 16:02:30"}
{"body":{"eventType":"ingrBtchList","params":{":ingrID":16}},"headers":{"accept":"*/*","content-length":"52","content-type":"application/json","host":"localhost:3001","user-agent":"insomnia/10.2.0"},"level":"http","message":"[execEventType.js] Request received","method":"POST","originalUrl":"/api/execEventType","timestamp":"2025-02-27 16:02:30"}
{":ingrID":16,"level":"debug","message":"[execEventType.js] Parameters:","timestamp":"2025-02-27 16:02:30"}
{"level":"debug","message":"[execEventType.js] Executing query with event type method: GET","timestamp":"2025-02-27 16:02:30"}
{"level":"debug","message":"[queryResolver.js] Original query:","params":{":ingrID":16},"qrySQL":"SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = :ingrID\nLIMIT 25","timestamp":"2025-02-27 16:02:30"}
{"level":"debug","message":"[queryResolver.js] Processing parameter:","paramName":":ingrID","paramValue":16,"timestamp":"2025-02-27 16:02:30"}
{"level":"debug","message":"[queryResolver.js] Modified query:","qrySQL":"SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = 16\nLIMIT 25","timestamp":"2025-02-27 16:02:30"}
{"level":"debug","message":"[queryResolver.js] Created request body:","qryMod":"SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = 16\nLIMIT 25","timestamp":"2025-02-27 16:02:30"}
{"0":"S","1":"E","10":"R","11":"O","12":"M","13":" ","14":"a","15":"p","16":"i","17":"_","18":"w","19":"f","2":"L","20":".","21":"i","22":"n","23":"g","24":"r","25":"B","26":"t","27":"c","28":"h","29":"L","3":"E","30":"i","31":"s","32":"t","33":"\n","34":"w","35":"h","36":"e","37":"r","38":"e","39":" ","4":"C","40":" ","41":"i","42":"n","43":"g","44":"r","45":"I","46":"D","47":" ","48":"=","49":" ","5":"T","50":"1","51":"6","52":"\n","53":"L","54":"I","55":"M","56":"I","57":"T","58":" ","59":"2","6":" ","60":"5","7":"*","8":"\n","9":"F","level":"debug","message":"[execEventType.js] Modified query:","timestamp":"2025-02-27 16:02:30"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = 16\nLIMIT 25","timestamp":"2025-02-27 16:02:30"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-02-27 16:02:30"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-02-27 16:02:30"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":43.079,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-02-27 16:02:30"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-02-27 16:02:30"}
{"level":"info","message":"[execEventType.js] Query executed successfully for ingrBtchList","timestamp":"2025-02-27 16:02:30"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":49.396,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-02-27 16:02:30"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:03:24"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:04:24"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:05:24"}
{"level":"info","message":"[app.js]  Request received: POST /api/execEventType","timestamp":"2025-02-27 16:06:02"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-02-27 16:06:02"}
{"body":{"eventType":"ingrBtchList","params":{":ingrID":16}},"headers":{"accept":"*/*","content-length":"52","content-type":"application/json","host":"localhost:3001","user-agent":"insomnia/10.2.0"},"level":"http","message":"[execEventType.js] Request received","method":"POST","originalUrl":"/api/execEventType","timestamp":"2025-02-27 16:06:02"}
{":ingrID":16,"level":"debug","message":"[execEventType.js] Parameters:","timestamp":"2025-02-27 16:06:02"}
{"level":"debug","message":"[execEventType.js] Executing query with event type method: GET","timestamp":"2025-02-27 16:06:02"}
{"level":"debug","message":"[queryResolver.js] Original query:","params":{":ingrID":16},"qrySQL":"SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = :ingrID\nLIMIT 25","timestamp":"2025-02-27 16:06:02"}
{"level":"debug","message":"[queryResolver.js] Processing parameter:","paramName":":ingrID","paramValue":16,"timestamp":"2025-02-27 16:06:02"}
{"level":"debug","message":"[queryResolver.js] Modified query:","qrySQL":"SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = 16\nLIMIT 25","timestamp":"2025-02-27 16:06:02"}
{"level":"debug","message":"[queryResolver.js] Created request body:","qryMod":"SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = 16\nLIMIT 25","timestamp":"2025-02-27 16:06:02"}
{"0":"S","1":"E","10":"R","11":"O","12":"M","13":" ","14":"a","15":"p","16":"i","17":"_","18":"w","19":"f","2":"L","20":".","21":"i","22":"n","23":"g","24":"r","25":"B","26":"t","27":"c","28":"h","29":"L","3":"E","30":"i","31":"s","32":"t","33":"\n","34":"w","35":"h","36":"e","37":"r","38":"e","39":" ","4":"C","40":" ","41":"i","42":"n","43":"g","44":"r","45":"I","46":"D","47":" ","48":"=","49":" ","5":"T","50":"1","51":"6","52":"\n","53":"L","54":"I","55":"M","56":"I","57":"T","58":" ","59":"2","6":" ","60":"5","7":"*","8":"\n","9":"F","level":"debug","message":"[execEventType.js] Modified query:","timestamp":"2025-02-27 16:06:02"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = 16\nLIMIT 25","timestamp":"2025-02-27 16:06:02"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-02-27 16:06:02"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-02-27 16:06:02"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":47.7364,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-02-27 16:06:02"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-02-27 16:06:02"}
{"level":"info","message":"[execEventType.js] Query executed successfully for ingrBtchList","timestamp":"2025-02-27 16:06:02"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":55.0283,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-02-27 16:06:02"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:06:24"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:07:24"}
{"level":"info","message":"[app.js]  Request received: POST /api/execEventType","timestamp":"2025-02-27 16:08:12"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-02-27 16:08:12"}
{"body":{"eventType":"ingrBtchList","params":{":ingrID":16}},"headers":{"accept":"*/*","content-length":"52","content-type":"application/json","host":"localhost:3001","user-agent":"insomnia/10.2.0"},"level":"http","message":"[execEventType.js] Request received","method":"POST","originalUrl":"/api/execEventType","timestamp":"2025-02-27 16:08:12"}
{":ingrID":16,"level":"debug","message":"[execEventType.js] Parameters:","timestamp":"2025-02-27 16:08:12"}
{"level":"debug","message":"[execEventType.js] Executing query with event type method: GET","timestamp":"2025-02-27 16:08:12"}
{"level":"debug","message":"[queryResolver.js] Original query:","params":{":ingrID":16},"qrySQL":"SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = :ingrID\nLIMIT 25","timestamp":"2025-02-27 16:08:12"}
{"level":"debug","message":"[queryResolver.js] Processing parameter:","paramName":":ingrID","paramValue":16,"timestamp":"2025-02-27 16:08:12"}
{"level":"debug","message":"[queryResolver.js] Modified query:","qrySQL":"SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = 16\nLIMIT 25","timestamp":"2025-02-27 16:08:12"}
{"level":"debug","message":"[queryResolver.js] Created request body:","qryMod":"SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = 16\nLIMIT 25","timestamp":"2025-02-27 16:08:12"}
{"0":"S","1":"E","10":"R","11":"O","12":"M","13":" ","14":"a","15":"p","16":"i","17":"_","18":"w","19":"f","2":"L","20":".","21":"i","22":"n","23":"g","24":"r","25":"B","26":"t","27":"c","28":"h","29":"L","3":"E","30":"i","31":"s","32":"t","33":"\n","34":"w","35":"h","36":"e","37":"r","38":"e","39":" ","4":"C","40":" ","41":"i","42":"n","43":"g","44":"r","45":"I","46":"D","47":" ","48":"=","49":" ","5":"T","50":"1","51":"6","52":"\n","53":"L","54":"I","55":"M","56":"I","57":"T","58":" ","59":"2","6":" ","60":"5","7":"*","8":"\n","9":"F","level":"debug","message":"[execEventType.js] Modified query:","timestamp":"2025-02-27 16:08:12"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = 16\nLIMIT 25","timestamp":"2025-02-27 16:08:12"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-02-27 16:08:12"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-02-27 16:08:12"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":38.7405,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-02-27 16:08:12"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-02-27 16:08:12"}
{"level":"info","message":"[execEventType.js] Query executed successfully for ingrBtchList","timestamp":"2025-02-27 16:08:12"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":46.0543,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-02-27 16:08:12"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:08:24"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:09:24"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:10:24"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:11:24"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:12:24"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:13:24"}
{"level":"info","message":"[app.js]  Request received: POST /api/execEventType","timestamp":"2025-02-27 16:14:10"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-02-27 16:14:10"}
{"body":{"eventType":"ingrBtchList","params":{":ingrID":16}},"headers":{"accept":"*/*","content-length":"52","content-type":"application/json","host":"localhost:3001","user-agent":"insomnia/10.2.0"},"level":"http","message":"[execEventType.js] Request received","method":"POST","originalUrl":"/api/execEventType","timestamp":"2025-02-27 16:14:10"}
{":ingrID":16,"level":"debug","message":"[execEventType.js] Parameters:","timestamp":"2025-02-27 16:14:10"}
{"level":"debug","message":"[execEventType.js] Executing query with event type method: GET","timestamp":"2025-02-27 16:14:10"}
{"level":"debug","message":"[queryResolver.js] Original query:","params":{":ingrID":16},"qrySQL":"SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = :ingrID\nLIMIT 25","timestamp":"2025-02-27 16:14:10"}
{"level":"debug","message":"[queryResolver.js] Processing parameter:","paramName":":ingrID","paramValue":16,"timestamp":"2025-02-27 16:14:10"}
{"level":"debug","message":"[queryResolver.js] Modified query:","qrySQL":"SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = 16\nLIMIT 25","timestamp":"2025-02-27 16:14:10"}
{"level":"debug","message":"[queryResolver.js] Created request body:","qryMod":"SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = 16\nLIMIT 25","timestamp":"2025-02-27 16:14:10"}
{"0":"S","1":"E","10":"R","11":"O","12":"M","13":" ","14":"a","15":"p","16":"i","17":"_","18":"w","19":"f","2":"L","20":".","21":"i","22":"n","23":"g","24":"r","25":"B","26":"t","27":"c","28":"h","29":"L","3":"E","30":"i","31":"s","32":"t","33":"\n","34":"w","35":"h","36":"e","37":"r","38":"e","39":" ","4":"C","40":" ","41":"i","42":"n","43":"g","44":"r","45":"I","46":"D","47":" ","48":"=","49":" ","5":"T","50":"1","51":"6","52":"\n","53":"L","54":"I","55":"M","56":"I","57":"T","58":" ","59":"2","6":" ","60":"5","7":"*","8":"\n","9":"F","level":"debug","message":"[execEventType.js] Modified query:","timestamp":"2025-02-27 16:14:10"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = 16\nLIMIT 25","timestamp":"2025-02-27 16:14:10"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-02-27 16:14:10"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-02-27 16:14:10"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":39.5479,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-02-27 16:14:10"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-02-27 16:14:10"}
{"level":"info","message":"[execEventType.js] Query executed successfully for ingrBtchList","timestamp":"2025-02-27 16:14:10"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":47.5148,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-02-27 16:14:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:14:24"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 16:14:47"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 16:14:47"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 16:14:47"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 16:14:47"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 16:14:47"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 16:14:47"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 16:14:47"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 16:14:47"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 16:14:47"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 16:14:47"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 16:14:47"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 16:14:47"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 16:14:47"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 16:14:47"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 16:14:47"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 16:14:47"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 16:14:47"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 16:14:47"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 16:14:47"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-02-27 16:14:47"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 16:14:47"}
{"level":"info","message":"[app.js]  Request received: POST /api/execEventType","timestamp":"2025-02-27 16:14:57"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-02-27 16:14:57"}
{"body":{"eventType":"ingrBtchList","params":{":ingrID":16}},"headers":{"accept":"*/*","content-length":"52","content-type":"application/json","host":"localhost:3001","user-agent":"insomnia/10.2.0"},"level":"http","message":"[execEventType.js] Request received","method":"POST","originalUrl":"/api/execEventType","timestamp":"2025-02-27 16:14:57"}
{":ingrID":16,"level":"debug","message":"[execEventType.js] Parameters:","timestamp":"2025-02-27 16:14:57"}
{"level":"info","message":"[eventTypeManager.js] Event types refreshed at Thu Feb 27 2025 16:14:57 GMT-0600 (Central Standard Time)","timestamp":"2025-02-27 16:14:57"}
{"level":"debug","message":"[execEventType.js] Executing query with event type method: GET","timestamp":"2025-02-27 16:14:57"}
{"level":"error","message":"[execEventType.js] Error executing event type: modifiedQuery is not defined","stack":"ReferenceError: modifiedQuery is not defined\n    at module.exports (C:\\Users\\pc790\\whatsfresh\\Projects\\wf-server\\server\\controller\\execEventType.js:36:39)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-02-27 16:14:57"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":10.2483,"method":"POST","operation":"http_request","path":"/api/execEventType","status":500},"timestamp":"2025-02-27 16:14:57"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:15:47"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 16:16:11"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 16:16:11"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 16:16:11"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 16:16:11"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 16:16:11"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 16:16:11"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 16:16:11"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 16:16:11"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 16:16:11"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 16:16:11"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 16:16:11"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 16:16:11"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 16:16:11"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 16:16:11"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 16:16:11"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 16:16:11"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 16:16:11"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 16:16:11"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 16:16:11"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-02-27 16:16:11"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 16:16:11"}
{"level":"info","message":"[app.js]  Request received: POST /api/execEventType","timestamp":"2025-02-27 16:16:16"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-02-27 16:16:16"}
{"body":{"eventType":"ingrBtchList","params":{":ingrID":16}},"headers":{"accept":"*/*","content-length":"52","content-type":"application/json","host":"localhost:3001","user-agent":"insomnia/10.2.0"},"level":"http","message":"[execEventType.js] Request received","method":"POST","originalUrl":"/api/execEventType","timestamp":"2025-02-27 16:16:16"}
{":ingrID":16,"level":"debug","message":"[execEventType.js] Parameters:","timestamp":"2025-02-27 16:16:16"}
{"level":"info","message":"[eventTypeManager.js] Event types refreshed at Thu Feb 27 2025 16:16:16 GMT-0600 (Central Standard Time)","timestamp":"2025-02-27 16:16:16"}
{"level":"debug","message":"[execEventType.js] Executing query with event type method: GET","timestamp":"2025-02-27 16:16:16"}
{"level":"debug","message":"[queryResolver.js] Original query:","params":{":ingrID":16},"qrySQL":"SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = :ingrID\nLIMIT 25","timestamp":"2025-02-27 16:16:16"}
{"level":"debug","message":"[queryResolver.js] Processing parameter:","paramName":":ingrID","paramValue":16,"timestamp":"2025-02-27 16:16:16"}
{"0":"S","1":"E","10":"R","11":"O","12":"M","13":" ","14":"a","15":"p","16":"i","17":"_","18":"w","19":"f","2":"L","20":".","21":"i","22":"n","23":"g","24":"r","25":"B","26":"t","27":"c","28":"h","29":"L","3":"E","30":"i","31":"s","32":"t","33":"\n","34":"w","35":"h","36":"e","37":"r","38":"e","39":" ","4":"C","40":" ","41":"i","42":"n","43":"g","44":"r","45":"I","46":"D","47":" ","48":"=","49":" ","5":"T","50":"1","51":"6","52":"\n","53":"L","54":"I","55":"M","56":"I","57":"T","58":" ","59":"2","6":" ","60":"5","7":"*","8":"\n","9":"F","level":"debug","message":"[queryResolver.js] Modified query:","timestamp":"2025-02-27 16:16:16"}
{"0":"S","1":"E","10":"R","11":"O","12":"M","13":" ","14":"a","15":"p","16":"i","17":"_","18":"w","19":"f","2":"L","20":".","21":"i","22":"n","23":"g","24":"r","25":"B","26":"t","27":"c","28":"h","29":"L","3":"E","30":"i","31":"s","32":"t","33":"\n","34":"w","35":"h","36":"e","37":"r","38":"e","39":" ","4":"C","40":" ","41":"i","42":"n","43":"g","44":"r","45":"I","46":"D","47":" ","48":"=","49":" ","5":"T","50":"1","51":"6","52":"\n","53":"L","54":"I","55":"M","56":"I","57":"T","58":" ","59":"2","6":" ","60":"5","7":"*","8":"\n","9":"F","level":"debug","message":"[queryResolver.js] Created request body with query:","timestamp":"2025-02-27 16:16:16"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = 16\nLIMIT 25","timestamp":"2025-02-27 16:16:16"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-02-27 16:16:16"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-02-27 16:16:16"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":74.5868,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-02-27 16:16:16"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-02-27 16:16:16"}
{"level":"info","message":"[execEventType.js] Query executed successfully for ingrBtchList","timestamp":"2025-02-27 16:16:16"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":90.6214,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-02-27 16:16:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:17:11"}
{"level":"info","message":"[app.js]  Request received: POST /api/execEventType","timestamp":"2025-02-27 16:18:07"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-02-27 16:18:07"}
{"body":{"eventType":"ingrBtchList","params":{":ingrID":16}},"headers":{"accept":"*/*","content-length":"52","content-type":"application/json","host":"localhost:3001","user-agent":"insomnia/10.2.0"},"level":"http","message":"[execEventType.js] Request received","method":"POST","originalUrl":"/api/execEventType","timestamp":"2025-02-27 16:18:07"}
{":ingrID":16,"level":"debug","message":"[execEventType.js] Parameters:","timestamp":"2025-02-27 16:18:07"}
{"level":"debug","message":"[execEventType.js] Executing query with event type method: GET","timestamp":"2025-02-27 16:18:07"}
{"level":"debug","message":"[queryResolver.js] Original query:","params":{":ingrID":16},"qrySQL":"SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = :ingrID\nLIMIT 25","timestamp":"2025-02-27 16:18:07"}
{"level":"debug","message":"[queryResolver.js] Processing parameter:","paramName":":ingrID","paramValue":16,"timestamp":"2025-02-27 16:18:07"}
{"0":"S","1":"E","10":"R","11":"O","12":"M","13":" ","14":"a","15":"p","16":"i","17":"_","18":"w","19":"f","2":"L","20":".","21":"i","22":"n","23":"g","24":"r","25":"B","26":"t","27":"c","28":"h","29":"L","3":"E","30":"i","31":"s","32":"t","33":"\n","34":"w","35":"h","36":"e","37":"r","38":"e","39":" ","4":"C","40":" ","41":"i","42":"n","43":"g","44":"r","45":"I","46":"D","47":" ","48":"=","49":" ","5":"T","50":"1","51":"6","52":"\n","53":"L","54":"I","55":"M","56":"I","57":"T","58":" ","59":"2","6":" ","60":"5","7":"*","8":"\n","9":"F","level":"debug","message":"[queryResolver.js] Modified query:","timestamp":"2025-02-27 16:18:07"}
{"0":"S","1":"E","10":"R","11":"O","12":"M","13":" ","14":"a","15":"p","16":"i","17":"_","18":"w","19":"f","2":"L","20":".","21":"i","22":"n","23":"g","24":"r","25":"B","26":"t","27":"c","28":"h","29":"L","3":"E","30":"i","31":"s","32":"t","33":"\n","34":"w","35":"h","36":"e","37":"r","38":"e","39":" ","4":"C","40":" ","41":"i","42":"n","43":"g","44":"r","45":"I","46":"D","47":" ","48":"=","49":" ","5":"T","50":"1","51":"6","52":"\n","53":"L","54":"I","55":"M","56":"I","57":"T","58":" ","59":"2","6":" ","60":"5","7":"*","8":"\n","9":"F","level":"debug","message":"[queryResolver.js] Created request body with query:","timestamp":"2025-02-27 16:18:07"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = 16\nLIMIT 25","timestamp":"2025-02-27 16:18:07"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-02-27 16:18:07"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-02-27 16:18:07"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":56.9362,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-02-27 16:18:07"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-02-27 16:18:07"}
{"level":"info","message":"[execEventType.js] Query executed successfully for ingrBtchList","timestamp":"2025-02-27 16:18:07"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":62.5555,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-02-27 16:18:07"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:18:11"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 16:18:48"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 16:18:48"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 16:18:48"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 16:18:48"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 16:18:48"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 16:18:48"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 16:18:48"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 16:18:48"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 16:18:48"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 16:18:48"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 16:18:48"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 16:18:48"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 16:18:48"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 16:18:48"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 16:18:48"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 16:18:48"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 16:18:48"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 16:18:48"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 16:18:48"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-02-27 16:18:48"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 16:18:48"}
{"level":"info","message":"[app.js]  Request received: POST /api/execEventType","timestamp":"2025-02-27 16:19:06"}
{"headers":{"content-type":"application/json","user-agent":"insomnia/10.2.0"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/api/execEventType","timestamp":"2025-02-27 16:19:06"}
{"body":{"eventType":"ingrBtchList","params":{":ingrID":16}},"headers":{"accept":"*/*","content-length":"52","content-type":"application/json","host":"localhost:3001","user-agent":"insomnia/10.2.0"},"level":"http","message":"[execEventType.js] Request received","method":"POST","originalUrl":"/api/execEventType","timestamp":"2025-02-27 16:19:06"}
{":ingrID":16,"level":"debug","message":"[execEventType.js] Parameters:","timestamp":"2025-02-27 16:19:06"}
{"level":"info","message":"[eventTypeManager.js] Event types refreshed at Thu Feb 27 2025 16:19:06 GMT-0600 (Central Standard Time)","timestamp":"2025-02-27 16:19:06"}
{"level":"debug","message":"[execEventType.js] Executing query with event type method: GET","timestamp":"2025-02-27 16:19:06"}
{"level":"debug","message":"[queryResolver.js] Original query:","params":{":ingrID":16},"qrySQL":"SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = :ingrID\nLIMIT 25","timestamp":"2025-02-27 16:19:06"}
{"level":"debug","message":"[queryResolver.js] Processing parameter:","paramName":":ingrID","paramValue":16,"timestamp":"2025-02-27 16:19:06"}
{"level":"debug","message":"[dbUtils.js] Executing GET query: SELECT *\nFROM api_wf.ingrBtchList\nwhere  ingrID = 16\nLIMIT 25","timestamp":"2025-02-27 16:19:06"}
{"level":"debug","message":"[dbUtils.js] Handling GET-specific logic","timestamp":"2025-02-27 16:19:06"}
{"level":"info","message":"[dbUtils.js] Query executed, rows fetched: 25","timestamp":"2025-02-27 16:19:06"}
{"level":"info","message":"Performance measurement for database_query","performance":{"duration":89.6237,"method":"GET","operation":"database_query","rowCount":25,"success":true},"timestamp":"2025-02-27 16:19:06"}
{"level":"debug","message":"[dbUtils.js] Connection released","timestamp":"2025-02-27 16:19:06"}
{"level":"info","message":"[execEventType.js] Query executed successfully for ingrBtchList","timestamp":"2025-02-27 16:19:06"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":107.4467,"method":"POST","operation":"http_request","path":"/api/execEventType","status":200},"timestamp":"2025-02-27 16:19:06"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:19:48"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:20:48"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:21:48"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:22:48"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 16:23:42"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 16:23:42"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 16:23:42"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 16:23:42"}
{"level":"debug","message":"[registerRoutes.js] /api/execEventType registered","timestamp":"2025-02-27 16:23:42"}
{"level":"debug","message":"[registerRoutes.js] /api/initialize registered","timestamp":"2025-02-27 16:23:42"}
{"level":"debug","message":"[registerRoutes.js] /api/util/list-routes registered","timestamp":"2025-02-27 16:23:42"}
{"level":"debug","message":"[registerRoutes.js] /api/util/restart-server registered","timestamp":"2025-02-27 16:23:42"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchEventTypes registered","timestamp":"2025-02-27 16:23:42"}
{"level":"debug","message":"[registerRoutes.js] /api/util/fetchApiColumns registered","timestamp":"2025-02-27 16:23:42"}
{"level":"debug","message":"[registerRoutes.js] /api/auth/login registered","timestamp":"2025-02-27 16:23:42"}
{"level":"debug","message":"[registerRoutes.js] /api/util/event-types-status registered","timestamp":"2025-02-27 16:23:42"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 16:23:42"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 16:23:42"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 16:23:42"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 16:23:42"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 16:23:42"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 16:23:42"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 16:23:42"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-02-27 16:23:42"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 16:23:42"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 16:23:57"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 16:23:58"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 16:23:58"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 16:23:58"}
{"0":"POST /api/execEventType","1":"POST /api/initialize","2":"GET /api/util/list-routes","3":"POST /api/util/restart-server","4":"GET /api/util/fetchEventTypes","5":"GET /api/util/fetchApiColumns","6":"POST /api/auth/login","7":"GET /api/util/event-types-status","level":"info","message":"[registerRoutes.js] Routes registered:","timestamp":"2025-02-27 16:23:58"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 16:23:58"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 16:23:58"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 16:23:58"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 16:23:58"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 16:23:58"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 16:23:58"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 16:23:58"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-02-27 16:23:58"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 16:23:58"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 16:24:16"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 16:24:16"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 16:24:16"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 16:24:16"}
{"0":"POST /api/execEventType","1":"POST /api/initialize","2":"GET /api/util/list-routes","3":"POST /api/util/restart-server","4":"GET /api/util/fetchEventTypes","5":"GET /api/util/fetchApiColumns","6":"POST /api/auth/login","7":"GET /api/util/event-types-status","level":"info","message":"[registerRoutes.js] Routes registered:","timestamp":"2025-02-27 16:24:16"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 16:24:16"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 16:24:16"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 16:24:16"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 16:24:16"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 16:24:16"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 16:24:16"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 16:24:16"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-02-27 16:24:16"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 16:24:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:25:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:26:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:27:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:28:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:29:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:30:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:31:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:32:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:33:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:34:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:35:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:36:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:37:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:38:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:39:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:40:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:41:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:42:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:43:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:44:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:45:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:46:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:47:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:48:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:49:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:50:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:51:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:52:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:53:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:54:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:55:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:56:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:57:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:58:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 16:59:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:00:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:01:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:02:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:03:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:04:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:05:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:06:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:07:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:08:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:09:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:10:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:11:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:12:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:13:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:14:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:15:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:16:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:17:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:18:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:19:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:20:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:21:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:22:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:23:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:24:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:25:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:26:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:27:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:28:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:29:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:30:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:31:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:32:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:33:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:34:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:35:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:36:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:37:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:38:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:39:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:40:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:41:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:42:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:43:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:44:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:45:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:46:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:47:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:48:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:49:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:50:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:51:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:52:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:53:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:54:16"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:55:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:56:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:57:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:58:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 17:59:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:00:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:01:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:02:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:03:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:04:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:05:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:06:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:07:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:08:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:09:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:10:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:11:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:12:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:13:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:14:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:15:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:16:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:17:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:18:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:19:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:20:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:21:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:22:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:23:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:24:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:25:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:26:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:27:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:28:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:29:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:30:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:31:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:32:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:33:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 18:34:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 21:54:32"}
{"level":"info","message":"[app.js]  Request received: GET /login","timestamp":"2025-02-27 21:55:14"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/login","timestamp":"2025-02-27 21:55:14"}
{"level":"warn","message":"[server.js] Route not found: GET /login","timestamp":"2025-02-27 21:55:14"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":4.0425,"method":"GET","operation":"http_request","path":"/login","status":404},"timestamp":"2025-02-27 21:55:14"}
{"level":"info","message":"[app.js]  Request received: GET /favicon.ico","timestamp":"2025-02-27 21:55:15"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 21:55:32"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 21:56:32"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 21:57:32"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 21:58:32"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 21:59:32"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:00:32"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:01:32"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:02:32"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:03:32"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:04:32"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:05:32"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:06:32"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:07:32"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:08:32"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:09:32"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:10:32"}
{"level":"info","message":"[app.js]  Request received: POST /execEventType","timestamp":"2025-02-27 22:10:59"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 22:10:59"}
{"level":"warn","message":"[server.js] Route not found: POST /execEventType","timestamp":"2025-02-27 22:10:59"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.105,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 22:10:59"}
{"level":"info","message":"[app.js]  Request received: POST /execEventType","timestamp":"2025-02-27 22:10:59"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 22:10:59"}
{"level":"warn","message":"[server.js] Route not found: POST /execEventType","timestamp":"2025-02-27 22:10:59"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.1602,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 22:10:59"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:11:32"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:12:32"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:13:32"}
{"level":"info","message":"[app.js]  Request received: POST /execEventType","timestamp":"2025-02-27 22:13:47"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 22:13:47"}
{"level":"warn","message":"[server.js] Route not found: POST /execEventType","timestamp":"2025-02-27 22:13:47"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.6565,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 22:13:47"}
{"level":"info","message":"[app.js]  Request received: POST /execEventType","timestamp":"2025-02-27 22:13:48"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 22:13:48"}
{"level":"warn","message":"[server.js] Route not found: POST /execEventType","timestamp":"2025-02-27 22:13:48"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.2779,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 22:13:48"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:14:32"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:15:32"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:16:32"}
{"level":"info","message":"[app.js]  Request received: POST /execEventType","timestamp":"2025-02-27 22:16:34"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 22:16:34"}
{"level":"warn","message":"[server.js] Route not found: POST /execEventType","timestamp":"2025-02-27 22:16:34"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.6508,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 22:16:34"}
{"level":"info","message":"[app.js]  Request received: POST /execEventType","timestamp":"2025-02-27 22:16:34"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 22:16:34"}
{"level":"warn","message":"[server.js] Route not found: POST /execEventType","timestamp":"2025-02-27 22:16:34"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":4.4218,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 22:16:34"}
{"level":"info","message":"[app.js]  Request received: POST /execEventType","timestamp":"2025-02-27 22:16:58"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 22:16:58"}
{"level":"warn","message":"[server.js] Route not found: POST /execEventType","timestamp":"2025-02-27 22:16:58"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.002,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 22:16:58"}
{"level":"info","message":"[app.js]  Request received: POST /execEventType","timestamp":"2025-02-27 22:16:58"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 22:16:58"}
{"level":"warn","message":"[server.js] Route not found: POST /execEventType","timestamp":"2025-02-27 22:16:58"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.956,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 22:16:58"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:16:58"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:16:58"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:16:58"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":5.0685,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:16:58"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:00"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:00"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:00"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.1767,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:00"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:01"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:01"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:01"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":3.1895,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:01"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:03"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:03"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:03"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.3645,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:03"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:04"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:04"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:04"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.4633,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:04"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:05"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:05"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:05"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.5401,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:05"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:07"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:07"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:07"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.5113,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:07"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:08"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:08"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:08"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.4008,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:08"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:09"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:09"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:09"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.0083,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:09"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:11"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:11"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:11"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.7541,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:11"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:12"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:12"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:12"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.9244,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:12"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:14"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:14"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:14"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.0039,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:14"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:15"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:15"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:15"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.756,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:15"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:16"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:16"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:16"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.1551,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:16"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:18"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:18"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:18"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.1806,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:18"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:19"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:19"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:19"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.3536,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:19"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:21"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:21"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:21"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.4525,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:21"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:22"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:22"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:22"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.9601,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:22"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:23"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:23"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:23"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.8826,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:23"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:25"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:25"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:25"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.2114,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:25"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:26"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:26"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:26"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.274,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:26"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:27"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:27"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:27"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.9402,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:27"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:29"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:29"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:29"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.4516,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:29"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:30"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:30"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:30"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.7734,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:30"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:32"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:32"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:32"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.5156,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:32"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:17:32"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:33"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:33"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:33"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.4929,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:33"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:34"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:34"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:34"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.8332,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:34"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:36"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:36"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:36"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.9765,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:36"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:37"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:37"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:37"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.5583,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:37"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:39"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:39"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:39"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.2711,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:39"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:40"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:40"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:40"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.8311,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:40"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:42"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:42"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:42"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.1841,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:42"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:43"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:43"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:43"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.2197,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:43"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:44"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:44"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:44"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.0891,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:44"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:46"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:46"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:46"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.2843,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:46"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:47"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:47"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:47"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.4456,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:47"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:48"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:48"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:48"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.1673,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:48"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:50"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:50"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:50"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.5164,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:50"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:51"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:51"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:51"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.4455,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:51"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:53"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:53"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:53"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.1285,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:53"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:54"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:54"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:54"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.6236,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:54"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:55"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:55"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:55"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.0797,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:55"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:57"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:57"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:57"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":3.9519,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:57"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:17:58"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:17:58"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:17:58"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.4434,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:17:58"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:18:00"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:18:00"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:18:00"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":3.2278,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:18:00"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:18:01"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:18:01"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:18:01"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":3.723,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:18:01"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:18:02"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:18:02"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:18:02"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.6581,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:18:02"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:18:05"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:18:05"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:18:05"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.2722,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:18:05"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:18:07"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:18:07"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:18:07"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.8307,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:18:07"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:18:09"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:18:09"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:18:09"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.2924,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:18:09"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:18:11"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:18:11"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:18:11"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.2244,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:18:11"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:18:13"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:18:13"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:18:13"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.7871,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:18:13"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:18:15"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:18:15"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:18:15"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.4093,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:18:15"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:18:17"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:18:17"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:18:17"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.6032,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:18:17"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:18:19"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:18:19"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:18:19"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.1003,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:18:19"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:18:21"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:18:21"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:18:21"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.0967,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:18:21"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:18:23"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:18:23"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:18:23"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.9208,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:18:23"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:18:25"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:18:25"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:18:25"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.5956,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:18:25"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:18:27"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:18:27"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:18:27"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.9188,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:18:27"}
{"level":"info","message":"[app.js]  Request received: GET /ws","timestamp":"2025-02-27 22:18:29"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/ws","timestamp":"2025-02-27 22:18:29"}
{"level":"warn","message":"[server.js] Route not found: GET /ws","timestamp":"2025-02-27 22:18:29"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.6481,"method":"GET","operation":"http_request","path":"/ws","status":404},"timestamp":"2025-02-27 22:18:29"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:18:32"}
{"level":"info","message":"[app.js]  Request received: POST /execEventType","timestamp":"2025-02-27 22:18:51"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 22:18:51"}
{"level":"warn","message":"[server.js] Route not found: POST /execEventType","timestamp":"2025-02-27 22:18:51"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.2949,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 22:18:51"}
{"level":"info","message":"[app.js]  Request received: POST /execEventType","timestamp":"2025-02-27 22:18:51"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 22:18:51"}
{"level":"warn","message":"[server.js] Route not found: POST /execEventType","timestamp":"2025-02-27 22:18:51"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.2284,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 22:18:51"}
{"level":"info","message":"[app.js]  Request received: POST /execEventType","timestamp":"2025-02-27 22:18:58"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 22:18:58"}
{"level":"warn","message":"[server.js] Route not found: POST /execEventType","timestamp":"2025-02-27 22:18:58"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.8566,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 22:18:58"}
{"level":"info","message":"[app.js]  Request received: POST /execEventType","timestamp":"2025-02-27 22:18:58"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 22:18:58"}
{"level":"warn","message":"[server.js] Route not found: POST /execEventType","timestamp":"2025-02-27 22:18:58"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.5401,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 22:18:58"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:19:32"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:20:32"}
{"level":"info","message":"[app.js]  Request received: POST /execEventType","timestamp":"2025-02-27 22:20:58"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 22:20:58"}
{"level":"warn","message":"[server.js] Route not found: POST /execEventType","timestamp":"2025-02-27 22:20:58"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.6302,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 22:20:58"}
{"level":"info","message":"[app.js]  Request received: POST /execEventType","timestamp":"2025-02-27 22:20:58"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 22:20:58"}
{"level":"warn","message":"[server.js] Route not found: POST /execEventType","timestamp":"2025-02-27 22:20:58"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.9961,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 22:20:58"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:21:32"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:22:32"}
{"level":"info","message":"[app.js]  Request received: POST /execEventType","timestamp":"2025-02-27 22:22:37"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 22:22:37"}
{"level":"warn","message":"[server.js] Route not found: POST /execEventType","timestamp":"2025-02-27 22:22:37"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.0073,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 22:22:37"}
{"level":"info","message":"[app.js]  Request received: POST /execEventType","timestamp":"2025-02-27 22:22:37"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 22:22:37"}
{"level":"warn","message":"[server.js] Route not found: POST /execEventType","timestamp":"2025-02-27 22:22:37"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.2499,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 22:22:37"}
{"level":"info","message":"[app.js]  Request received: POST /execEventType","timestamp":"2025-02-27 22:23:25"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 22:23:25"}
{"level":"warn","message":"[server.js] Route not found: POST /execEventType","timestamp":"2025-02-27 22:23:25"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.8597,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 22:23:25"}
{"level":"info","message":"[app.js]  Request received: POST /execEventType","timestamp":"2025-02-27 22:23:25"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 22:23:25"}
{"level":"warn","message":"[server.js] Route not found: POST /execEventType","timestamp":"2025-02-27 22:23:25"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.2432,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 22:23:25"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:23:32"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:24:33"}
{"level":"info","message":"[app.js]  Request received: POST /execEventType","timestamp":"2025-02-27 22:24:36"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 22:24:36"}
{"level":"warn","message":"[server.js] Route not found: POST /execEventType","timestamp":"2025-02-27 22:24:36"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.2584,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 22:24:36"}
{"level":"info","message":"[app.js]  Request received: POST /execEventType","timestamp":"2025-02-27 22:24:36"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 22:24:36"}
{"level":"warn","message":"[server.js] Route not found: POST /execEventType","timestamp":"2025-02-27 22:24:36"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.9776,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 22:24:36"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:25:33"}
{"level":"info","message":"[app.js]  Request received: POST /execEventType","timestamp":"2025-02-27 22:26:01"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 22:26:01"}
{"level":"warn","message":"[server.js] Route not found: POST /execEventType","timestamp":"2025-02-27 22:26:01"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.01,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 22:26:01"}
{"level":"info","message":"[app.js]  Request received: POST /execEventType","timestamp":"2025-02-27 22:26:01"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 22:26:01"}
{"level":"warn","message":"[server.js] Route not found: POST /execEventType","timestamp":"2025-02-27 22:26:01"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":4.5133,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 22:26:01"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:26:33"}
{"level":"info","message":"[app.js]  Request received: POST /execEventType","timestamp":"2025-02-27 22:27:31"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 22:27:31"}
{"level":"warn","message":"[server.js] Route not found: POST /execEventType","timestamp":"2025-02-27 22:27:31"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.3515,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 22:27:31"}
{"level":"info","message":"[app.js]  Request received: POST /execEventType","timestamp":"2025-02-27 22:27:31"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 22:27:31"}
{"level":"warn","message":"[server.js] Route not found: POST /execEventType","timestamp":"2025-02-27 22:27:31"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":6.2106,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 22:27:31"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:27:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:28:33"}
{"level":"info","message":"[app.js]  Request received: POST /execEventType","timestamp":"2025-02-27 22:28:38"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 22:28:38"}
{"level":"warn","message":"[server.js] Route not found: POST /execEventType","timestamp":"2025-02-27 22:28:38"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":3.2391,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 22:28:38"}
{"level":"info","message":"[app.js]  Request received: POST /execEventType","timestamp":"2025-02-27 22:28:38"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/execEventType","timestamp":"2025-02-27 22:28:38"}
{"level":"warn","message":"[server.js] Route not found: POST /execEventType","timestamp":"2025-02-27 22:28:38"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.5689,"method":"POST","operation":"http_request","path":"/execEventType","status":404},"timestamp":"2025-02-27 22:28:38"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:29:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:30:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:31:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:32:33"}
{"level":"info","message":"[app.js]  Request received: POST /auth/login","timestamp":"2025-02-27 22:33:08"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/auth/login","timestamp":"2025-02-27 22:33:08"}
{"level":"warn","message":"[server.js] Route not found: POST /auth/login","timestamp":"2025-02-27 22:33:08"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.5069,"method":"POST","operation":"http_request","path":"/auth/login","status":404},"timestamp":"2025-02-27 22:33:08"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:33:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:34:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:35:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:36:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:37:33"}
{"level":"info","message":"[app.js]  Request received: POST /auth/login","timestamp":"2025-02-27 22:38:14"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/auth/login","timestamp":"2025-02-27 22:38:14"}
{"level":"warn","message":"[server.js] Route not found: POST /auth/login","timestamp":"2025-02-27 22:38:14"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.9906,"method":"POST","operation":"http_request","path":"/auth/login","status":404},"timestamp":"2025-02-27 22:38:14"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:38:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:39:33"}
{"level":"info","message":"[app.js]  Request received: POST /auth/login","timestamp":"2025-02-27 22:40:14"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/auth/login","timestamp":"2025-02-27 22:40:14"}
{"level":"warn","message":"[server.js] Route not found: POST /auth/login","timestamp":"2025-02-27 22:40:14"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":2.0269,"method":"POST","operation":"http_request","path":"/auth/login","status":404},"timestamp":"2025-02-27 22:40:14"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:40:33"}
{"level":"info","message":"[app.js]  Request received: POST /auth/login","timestamp":"2025-02-27 22:40:43"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/auth/login","timestamp":"2025-02-27 22:40:43"}
{"level":"warn","message":"[server.js] Route not found: POST /auth/login","timestamp":"2025-02-27 22:40:43"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.2275,"method":"POST","operation":"http_request","path":"/auth/login","status":404},"timestamp":"2025-02-27 22:40:43"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:41:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:42:33"}
{"level":"info","message":"[app.js]  Request received: POST /auth/login","timestamp":"2025-02-27 22:43:19"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/auth/login","timestamp":"2025-02-27 22:43:19"}
{"level":"warn","message":"[server.js] Route not found: POST /auth/login","timestamp":"2025-02-27 22:43:19"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.8341,"method":"POST","operation":"http_request","path":"/auth/login","status":404},"timestamp":"2025-02-27 22:43:19"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:43:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:44:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:45:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:46:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:47:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:48:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:49:33"}
{"level":"info","message":"[app.js]  Request received: POST /auth/login","timestamp":"2025-02-27 22:49:47"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/auth/login","timestamp":"2025-02-27 22:49:47"}
{"level":"warn","message":"[server.js] Route not found: POST /auth/login","timestamp":"2025-02-27 22:49:47"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.7981,"method":"POST","operation":"http_request","path":"/auth/login","status":404},"timestamp":"2025-02-27 22:49:47"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:50:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:51:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:52:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:53:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:54:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:55:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:56:33"}
{"level":"info","message":"[app.js]  Request received: POST /auth/login","timestamp":"2025-02-27 22:56:55"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/auth/login","timestamp":"2025-02-27 22:56:55"}
{"level":"warn","message":"[server.js] Route not found: POST /auth/login","timestamp":"2025-02-27 22:56:55"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.0493,"method":"POST","operation":"http_request","path":"/auth/login","status":404},"timestamp":"2025-02-27 22:56:55"}
{"level":"info","message":"[app.js]  Request received: POST /auth/login","timestamp":"2025-02-27 22:57:32"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/auth/login","timestamp":"2025-02-27 22:57:32"}
{"level":"warn","message":"[server.js] Route not found: POST /auth/login","timestamp":"2025-02-27 22:57:32"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.4643,"method":"POST","operation":"http_request","path":"/auth/login","status":404},"timestamp":"2025-02-27 22:57:32"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:57:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:58:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 22:59:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:00:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:01:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:02:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:03:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:04:33"}
{"level":"info","message":"[app.js]  Request received: POST /auth/login","timestamp":"2025-02-27 23:05:17"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/auth/login","timestamp":"2025-02-27 23:05:17"}
{"level":"warn","message":"[server.js] Route not found: POST /auth/login","timestamp":"2025-02-27 23:05:17"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.9488,"method":"POST","operation":"http_request","path":"/auth/login","status":404},"timestamp":"2025-02-27 23:05:17"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:05:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:06:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:07:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:08:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:09:33"}
{"level":"info","message":"[app.js]  Request received: POST /auth/login","timestamp":"2025-02-27 23:10:12"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/auth/login","timestamp":"2025-02-27 23:10:12"}
{"level":"warn","message":"[server.js] Route not found: POST /auth/login","timestamp":"2025-02-27 23:10:12"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.8835,"method":"POST","operation":"http_request","path":"/auth/login","status":404},"timestamp":"2025-02-27 23:10:12"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:10:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:11:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:12:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:13:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:14:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:15:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:16:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:17:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:18:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:19:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:20:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:21:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:22:33"}
{"level":"info","message":"[app.js]  Request received: GET /","timestamp":"2025-02-27 23:23:10"}
{"headers":{"user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"GET","path":"/","timestamp":"2025-02-27 23:23:10"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.3106,"method":"GET","operation":"http_request","path":"/","status":200},"timestamp":"2025-02-27 23:23:10"}
{"level":"info","message":"[app.js]  Request received: GET /favicon.ico","timestamp":"2025-02-27 23:23:10"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:23:33"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:24:33"}
{"level":"info","message":"[app.js]  Application initialized","timestamp":"2025-02-27 23:26:18"}
{"level":"info","message":"[dbManager.js] Database connection test successful","timestamp":"2025-02-27 23:26:19"}
{"level":"info","message":"[server.js] Initializing routes","timestamp":"2025-02-27 23:26:19"}
{"level":"info","message":"[registerRoutes.js] Started registering routes","timestamp":"2025-02-27 23:26:19"}
{"0":"POST /api/execEventType","1":"POST /api/initialize","2":"GET /api/util/list-routes","3":"POST /api/util/restart-server","4":"GET /api/util/fetchEventTypes","5":"GET /api/util/fetchApiColumns","6":"POST /api/auth/login","7":"GET /api/util/event-types-status","level":"info","message":"[registerRoutes.js] Routes registered:","timestamp":"2025-02-27 23:26:19"}
{"level":"info","message":"[registerRoutes.js] Routes setup complete","timestamp":"2025-02-27 23:26:19"}
{"level":"info","message":"[server.js] Routes initialized","timestamp":"2025-02-27 23:26:19"}
{"count":16,"level":"info","message":"[fetchEventTypes.js] Event types loaded from database","timestamp":"2025-02-27 23:26:19"}
{"level":"info","message":"[fetchEventTypes.js] eventTypes.js file generated successfully","timestamp":"2025-02-27 23:26:19"}
{"count":21,"level":"info","message":"[fetchApiColumns.js] API columns loaded from database","timestamp":"2025-02-27 23:26:19"}
{"level":"info","message":"[fetchApiColumns.js] apiColumns.js file generated successfully","timestamp":"2025-02-27 23:26:19"}
{"level":"info","message":"[server.js] Starting server on port 3001","timestamp":"2025-02-27 23:26:19"}
{"level":"info","message":"[server.js] Server timeouts configured: keepAlive=5s, headers=6s","timestamp":"2025-02-27 23:26:19"}
{"level":"info","message":"[server.js] Server is running on http://localhost:3001","timestamp":"2025-02-27 23:26:19"}
{"level":"info","message":"[app.js]  Request received: POST /auth/login","timestamp":"2025-02-27 23:27:04"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/auth/login","timestamp":"2025-02-27 23:27:04"}
{"level":"warn","message":"[server.js] Route not found: POST /auth/login","timestamp":"2025-02-27 23:27:04"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":6,"method":"POST","operation":"http_request","path":"/auth/login","status":404},"timestamp":"2025-02-27 23:27:04"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:27:18"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:28:18"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:29:18"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:30:18"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:31:18"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:32:18"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:33:18"}
{"level":"info","message":"[app.js]  Request received: POST /auth/login","timestamp":"2025-02-27 23:33:20"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/auth/login","timestamp":"2025-02-27 23:33:20"}
{"level":"warn","message":"[server.js] Route not found: POST /auth/login","timestamp":"2025-02-27 23:33:20"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.9264,"method":"POST","operation":"http_request","path":"/auth/login","status":404},"timestamp":"2025-02-27 23:33:20"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:34:19"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:35:19"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:36:19"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:37:19"}
{"level":"info","message":"[app.js]  Request received: POST /auth/login","timestamp":"2025-02-27 23:37:25"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/auth/login","timestamp":"2025-02-27 23:37:25"}
{"level":"warn","message":"[server.js] Route not found: POST /auth/login","timestamp":"2025-02-27 23:37:25"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":0.9973,"method":"POST","operation":"http_request","path":"/auth/login","status":404},"timestamp":"2025-02-27 23:37:25"}
{"level":"info","message":"[app.js]  Request received: POST /auth/login","timestamp":"2025-02-27 23:37:54"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/auth/login","timestamp":"2025-02-27 23:37:54"}
{"level":"warn","message":"[server.js] Route not found: POST /auth/login","timestamp":"2025-02-27 23:37:54"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.6083,"method":"POST","operation":"http_request","path":"/auth/login","status":404},"timestamp":"2025-02-27 23:37:54"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:38:19"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:39:19"}
{"level":"info","message":"[app.js]  Request received: POST /auth/login","timestamp":"2025-02-27 23:39:49"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/auth/login","timestamp":"2025-02-27 23:39:49"}
{"level":"warn","message":"[server.js] Route not found: POST /auth/login","timestamp":"2025-02-27 23:39:49"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.0748,"method":"POST","operation":"http_request","path":"/auth/login","status":404},"timestamp":"2025-02-27 23:39:49"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:40:19"}
{"level":"info","message":"[app.js]  Request received: POST /auth/login","timestamp":"2025-02-27 23:40:39"}
{"headers":{"content-type":"application/json","user-agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36"},"level":"http","message":"[app.js]  Request","method":"POST","path":"/auth/login","timestamp":"2025-02-27 23:40:39"}
{"level":"warn","message":"[server.js] Route not found: POST /auth/login","timestamp":"2025-02-27 23:40:39"}
{"level":"info","message":"Performance measurement for http_request","performance":{"duration":1.3198,"method":"POST","operation":"http_request","path":"/auth/login","status":404},"timestamp":"2025-02-27 23:40:39"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:41:19"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:42:19"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:43:19"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:44:19"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:45:19"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:46:19"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:47:19"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:48:19"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:49:19"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:50:19"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:51:19"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:52:19"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:53:19"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:54:19"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:55:19"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:56:19"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:57:19"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:58:19"}
{"level":"debug","message":"[dbManager.js] Health check passed","timestamp":"2025-02-27 23:59:19"}
